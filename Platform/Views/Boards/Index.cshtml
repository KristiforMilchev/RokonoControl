@{
    ViewData["Title"] = "Board";
    Layout = "~/Views/Shared/_LayoutDashboard.cshtml";
    var ProjectId = ViewData["ProjectId"];
    var WorkItemTypes = ViewData["WorkItemTypes"] as List<WorkItemTypes>;
    var ProjectName = ViewData["ProjectName"] as string;
}

<script src="https://cdn.syncfusion.com/ej2/dist/ej2.min.js" type="text/javascript"></script>

<link href="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css" rel="stylesheet">

<!--[if lt IE 9]>
<script src="../scripts/jquery-1.11.3.min.js" type="text/javascript" ></script>
<![endif]-->
@* <link href="~/SuncfusionEj1/web/content/ejthemes/default-theme/ej.web.all.min.css" rel="stylesheet" />
    <link href="~/SuncfusionEj1/web/content/default-responsive.css" rel="stylesheet" />
    <link href="~/SuncfusionEj1/web/content/ejthemes/responsive-css/ej.responsive.css" rel="stylesheet" />
    <!--[if IE 9]><!-->
    <script src="~/SuncfusionEj1/web/scripts/jsrender.min.js" type="text/javascript"></script> *@
<!--<![endif]-->
@* <script src="~/SuncfusionEj1/web/scripts/ej.web.all.min.js" type="text/javascript"></script>
    <script src="~/SuncfusionEj1/web/scripts/properties.js" type="text/javascript"></script> *@

 <link href="~/css/Sprints/Sprints.css" rel="stylesheet" />

<!-- end of sidebar element -->
<!-- main-content declaration -->
 
      <div id="spinner">
            <div id="loader"></div>
        </div>
        <div id="Content" hidden>
        <div class="main-card mb-12 card">
            <div class="card-body text-center">

                <div class="page-title-heading">
                    <div class="page-title-icon">
                        <i class="pe-7s-graph text-success">
                        </i>
                    </div>
                    <div>
                        Project Dashboard
                        <div class="page-title-subheading">
                            @ProjectName
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="main-card mb-12 card">
            <div class="card-body text-center">

                <div class="row">
                    <p>Priority</p>
                    <select class="form-control-sm form-control" id="PlanningDropdown">
                        @foreach (var wType in WorkItemTypes)
                        {
                            <option value="@wType.Id">@wType.TypeName</option>
                        }
                    </select>
                </div>
                <div class="row">
                    <div class="cols-sample-area" id="board">

                        <div id="KanbanHolder">
                            <div id="Kanban"></div>
                        </div>

                    </div>
                </div>
            </div>
        </div>
         <!-- Modals -->
        <div id="AssignModel">
            <div class="btn-group dropdown-split-primary" style="text-align:center;">
                <div class="row">
                    <div id="ProjectUsers"></div>
                </div>
                <div class="row">
                    <button   id="assignBtn" onclick="AssignNewUser()">Assign</button>
                    <button   id="cancelBtn" onclick="CancelAssign()">Cancel</button>

                </div>
            </div>
        </div>
        </div>
 


        <script type="text/javascript">
        ej.base.enableRipple(true);
        var card;
        var gData;
        var dialogObj;
        var selectedChanging;

        var PlanningDropdown = new ej.dropdowns.DropDownList({

            // set the placeholder to DropDownList input element
            placeholder: 'Work Item Type',
            change: workItemTypesChanged,
            // set the height of the popup element
            popupHeight: '300px',
            index: 0,

        });

        function workItemTypesChanged(args) {
            ShowLoader();
             $.ajax({
                type: 'GET',
                 url: '/Boards/GetWorkItems?projectId=@ProjectId&workItemType=' + PlanningDropdown.value,
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                success: function (response) {

                    GenerateKaban(response);
                },
                error: function (xhr, status, error) {
                    console.log(xhr);
                }
            });
        }
        PlanningDropdown.appendTo('#PlanningDropdown');
        window.getTags = function (data) {
            var tagDiv = '<div class="e-tags">';
            var tags = data.Tags.split(',');
            for (var i = 0; i < tags.length; i++) {
                var tag = tags[i];
                tagDiv = tagDiv.concat('<div class="e-tag e-tooltip-text">' + tag + '</div>');
            }
            return tagDiv.concat('</div>');
        };
        $(function() {
             dialogObj = new ej.popups.Dialog({
                width: '600px',
                header: 'Chose a user',
                isModal: true,
                animationSettings: { effect: 'None' },
                visible: false,
                open: dialogOpen,
                close: dialogClose
            });
            dialogObj.appendTo('#AssignModel');

              $.ajax({
                type: 'GET',
                url: '/Accounts/GetProjectUsers?projectId=@ProjectId',
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                success: function (response) {
                    InitliazePUsersGrid(response);
                },
                error: function (xhr, status, error) {
                    console.log(error);
                }
            });
            $.ajax({
                type: 'GET',
                url: '/Boards/GetWorkItems?projectId=@ProjectId&workItemType='+$("#PlanningDropdown :selected").val(),
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                success: function (response) {

                    GenerateKaban(response);
                },
                error: function (xhr, status, error) {
                    console.log(xhr);
                }
            });
         //   var data = ej.DataManager(window.kanbanData).executeLocal(ej.Query().take(20));
            ShowContent();

		 });

         function GenerateKaban(response)
         {
             $("#KanbanHolder").html("<div id=\"Kanban\"></div>");
             $("#KanbanHolder").html();

            var data = ej.base.extend([], response, null, true); // To maintain the property changes, extend the object.
            console.log(data);
            var kanbanObj = new ej.kanban.Kanban({
                dataSource: data,
                dragStop: DragStopped,
                actionComplete: CardDropCheck,
                cardDoubleClick: CardSelected,
                keyField: 'status',
                enableTooltip: true,
                columns: [
                    { headerText: 'To Do', keyField: 'Open', template: '#headerTemplate', allowToggle: true },
                    { headerText: 'In Progress', keyField: 'InProgress', template: '#headerTemplate', allowToggle: true },
                    { headerText: 'In Review', keyField: 'Testing', template: '#headerTemplate', allowToggle: true },
                    { headerText: 'Done', keyField: 'Done', template: '#headerTemplate', allowToggle: true }
                ],
                cardSettings: {
                    contentField: 'summary',
                    headerField: 'id',
                    template: '#cardTemplate',
                    selectionType: 'Multiple'
                },
                swimlaneSettings: {
                    keyField: 'assignee',
                }
            });


            kanbanObj.appendTo('#Kanban');
            ShowContent();
         }
        function CardSelected(args)
        {
            console.log(args);
            console.log("/Dashboard/EditWorkItem?projectId=@ProjectId&&workItem="+args.data.innerId);
            window.location.href = "/Dashboard/EditWorkItem?projectId=@ProjectId&&workItem="+args.data.innerId+"&returnUrl="+window.location.href;

        }
        function CardDropCheck(args)
        {
            console.log(args);
            if(args.requestType == "cardChanged" && card)
            {
                card.Board = args.changedRecords[0].status;
                ValidateCardChanged();
            }
        }
        function ValidateCardChanged()
        {
            console.log("Posting");
            $.ajax({
                type: 'POST',
                url: '/Boards/ChangeWorkItemBoard',
                data: JSON.stringify(card),
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                success: function(response) {
                    //window.location.href = "/Dashboard/AssignAccountProjects?id="+response;
                },
                error: function(xhr, status, error) {
                    console.log(error);
                }
            });
        }
         function DragStopped(args)
         {
            console.log(args);
            card = {
                "CardId" :args.data[0].innerId,
                "Board" :args.data[0].status,
                "ProjectId" : @ProjectId
            }

         }

        function ChangeOwner(data)
        {

            selectedChanging = data;
            console.log(data);
        //    selectedChangingId = id;
            console.log("Changing Owner");
            dialogObj.show();
        }

        function dialogClose() {
            document.getElementById('AssignModel').style.display = 'none';
        }
        function dialogOpen() {

            document.getElementById('AssignModel').style.display = 'block';
        }

        function AssignNewUser()
        {
            selectedChanging.textContent = selectedRowData.name;
            ChangeCardOwner(selectedChanging.id, selectedRowData.name);
            CancelAssign();
        }
        function CancelAssign()
        {
            dialogClose();
            dialogObj.hide();

        }

        function UserSelected(args)
        {
            selectedChanging.textContent = args.rowData.name;
            CancelAssign();
            ChangeCardOwner(selectedChanging.id, args.rowData.name);
        }
        function ChangeCardOwner(id,name)
        {
            var incomingSprintDTO =
            {
                "CardId": id,
                "Name": name
            }

            $.ajax({
                type: 'POST',
                url: '/Boards/ChangeCardOwner',
                data: JSON.stringify(incomingSprintDTO),
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                success: function(response) {

                },
                error: function(xhr, status, error) {
                    console.log(error);
                }
            });
        }

        function InitliazePUsersGrid(data)
        {
            console.log(data);
            var ProjectUsers = new ej.treegrid.TreeGrid({
                dataSource: data,
                allowSelection: true,
                allowFiltering: true,
                allowSorting: true,
                toolbar: ['Search'],
                rowSelected: UserRowSelected,
                recordDoubleClick: UserSelected,
                filterSettings: { type: 'Menu' },
                enableHover: false,
                columns: [
                    { field: 'name', headerText: 'Email', width: 110 },
                ]
            });

            ProjectUsers.appendTo('#ProjectUsers');
        }
        function UserRowSelected(args)
        {
            selectedRowData = args.data;
            console.log(args);
        }
        function UserSelected(args)
        {
            selectedChanging.textContent = args.rowData.name;
            CancelAssign();
            ChangeCardOwner(selectedChanging.id, args.rowData.name);
        }

        </script>

<script id="headerTemplate" type="text/x-jsrender">
    <div class="header-template-wrap">
        <div class="header-icon e-icons ${keyField}"></div>
        <div class="header-text">${headerText}</div>

    </div>
</script>
<script id="cardTemplate" type="text/x-jsrender">
    <div class='card-template ${priority}' style='content: "\e511 ";'>
        <div class='card-header e-tooltip-text'>
            <div class="row" style="display:flex;">
                <div class="col-2">
                    <span class="e-search ${priority}"></span>
                </div>
                <div class="col-10" style="width:100%; text-align:center;">
                    <span style="text-align:center;">${id} ${title}</span>
                </div>
            </div>
        </div>


        <div class='card-template-wrap'>
            <div class="row" style="padding:2%;">
                <div class='e-text'>${summary}</div>

            </div>
            <div class="row" style="padding:2%;">
                <div class='Interactice' onclick='ChangeOwner(this)' id='${id}'>${assgignedAccount}</div>
            </div>
            <div class="row status" style="display:flex;padding:2%;">

                <div class="col-3">
                    <span class='status'></span><div class='e-text' style="text-align:left;">Status:</div>
                </div>
                <div class="col-9" style="width:100%;">
                    <div class='Interactice'>${status}</div>
                </div>
            </div>

        </div>

    </div>
</script>
