@{
    ViewData["Title"] = "Board";
    Layout = "~/Views/Shared/_LayoutProjects.cshtml";
    var ProjectId = ViewData["ProjectId"];
    var WorkItemTypes = ViewData["WorkItemTypes"] as List<WorkItemTypes>;
    var ProjectName = ViewData["ProjectName"] as string;
    var Iteration = ViewData["Iteration"] as int?;
    var Person = ViewData["Person"] as int?;
    var ViewRights = ViewData["GetUserViewRights"] as int?;
}
<script src="https://code.jquery.com/jquery-3.4.1.min.js"></script>

 
<link href="~/Syncfusion/ej2/material.css" rel="stylesheet" />
<link href="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css" rel="stylesheet">

<!--[if lt IE 9]>
<script src="../scripts/jquery-1.11.3.min.js" type="text/javascript" ></script>
<![endif]-->
@* <link href="~/SuncfusionEj1/web/content/ejthemes/default-theme/ej.web.all.min.css" rel="stylesheet" />
    <link href="~/SuncfusionEj1/web/content/default-responsive.css" rel="stylesheet" />
    <link href="~/SuncfusionEj1/web/content/ejthemes/responsive-css/ej.responsive.css" rel="stylesheet" />
    <!--[if IE 9]><!-->
    <script src="~/SuncfusionEj1/web/scripts/jsrender.min.js" type="text/javascript"></script> *@
<!--<![endif]-->
@* <script src="~/SuncfusionEj1/web/scripts/ej.web.all.min.js" type="text/javascript"></script>
    <script src="~/SuncfusionEj1/web/scripts/properties.js" type="text/javascript"></script> *@

<link href="~/css/Sprints/Sprints.css" rel="stylesheet" />
<!-- end of sidebar element -->
<!-- main-content declaration -->
 
        <div class="main-card mb-12 card">
            <div class="card-body text-center">

                <div class="page-title-heading">
                    <div class="page-title-icon">
                        <i class="pe-7s-graph text-success">
                        </i>
                    </div>
                    <div>
                       Public Project Dashboard
                        <div class="page-title-subheading">
                            @ProjectName
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="row">


            <div class="col-md-5">
             
            </div>
            <div class="col-md-3">

            </div>
            <div class="col-md-4">
                <button type="button" id="Iterations" class="btn btn-primary">Active Iteration</button>
            </div>
        </div>
        <div class="row">
            <div class="cols-sample-area" id="board">

                <div id="KanbanHolder">
                    <div id="Kanban"></div>
                </div>

            </div>
        </div>
        
 



<script type="text/javascript">
        var publicCheck = new ejs.buttons.Switch({ checked: false });
        publicCheck.appendTo('#publicCheck');

        var dialogObj;
        var iconbtn = new ej.buttons.Button({ cssClass: 'e-outline', isPrimary: true });
        iconbtn.appendTo('#iconbtn');
        var backlogBtn = new ej.buttons.Button({ cssClass: 'e-outline', isPrimary: true });
        backlogBtn.appendTo('#backlogBtn');
        var capacityBtn = new ej.buttons.Button({ cssClass: 'e-outline', isPrimary: true });
        capacityBtn.appendTo('#capacityBtn');
        var analitycsBtn = new ej.buttons.Button({ cssClass: 'e-outline', isPrimary: true });
        analitycsBtn.appendTo('#analitycsBtn');


        var assignBtn = new ej.buttons.Button({ cssClass: 'e-outline', isPrimary: true });
        assignBtn.appendTo('#assignBtn');

        var cancelBtn = new ej.buttons.Button({ cssClass: 'e-outline', isPrimary: true });
        cancelBtn.appendTo('#cancelBtn');

    // DropDownButton items declaration


        ej.base.enableRipple(true);
        var selectedChanging;
        var selectedRowData;
        var card;
        var gData;
        window.getTags = function (data) {
            var tagDiv = '<div class="e-tags">';
            var tags = data.Tags.split(',');
            for (var i = 0; i < tags.length; i++) {
                var tag = tags[i];
                tagDiv = tagDiv.concat('<div class="e-tag e-tooltip-text">' + tag + '</div>');
            }
            return tagDiv.concat('</div>');
        };

        $.ajax({
            type: 'GET',
            url: '/Accounts/GetProjectUsers?projectId=@ProjectId',
            contentType: "application/json; charset=utf-8",
            dataType: "json",
            success: function (response) {
                InitliazePUsersGrid(response);
            },
            error: function (xhr, status, error) {
                console.log(error);
            }
        });
        $(function() {

            
            var incomingSprintDTO =
            {
                "ProjectId": @ProjectId,
                "WorkItemTypeId": $("#ItemPriority :selected").val(),
                "IterationId": @Iteration,
                "PersonId": @Person,
                "All" : @ViewRights
            }



             $.ajax({
                type: 'POST',
                url: '/Boards/GetSprints',
                data: JSON.stringify(incomingSprintDTO),
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                success: function(response) {
                    GenerateKaban(response);
                },
                error: function(xhr, status, error) {
                    console.log(error);
                }
            });
            var iterationDTO = {
                "Iteration": @Iteration,
                "ProjectId":@ProjectId,
                "IsPublic": true
            }

            $.ajax({
                type: 'POST',
                url: '/Boards/GetIterations',
                data: JSON.stringify(iterationDTO),
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                success: function(response) {
                    var Iterations = new ej.splitbuttons.DropDownButton({ items: response, iconCss: 'e-ddb-icons e-profile',cssClass: 'e-outline', select:WorkItemListClicked });
                    Iterations.appendTo('#Iterations');
                },
                error: function(xhr, status, error) {
                    console.log(error);
                }
            });
           

		 });


         function GenerateKaban(response)
         {
             $("#KanbanHolder").html("<div id=\"Kanban\"></div>");
             $("#KanbanHolder").html();

            var data = ej.base.extend([], response, null, true); // To maintain the property changes, extend the object.
            console.log(data);
            var kanbanObj = new ej.kanban.Kanban({
                dataSource: data,
                keyField: 'status',
                enableTooltip: true,
                allowDragAndDrop: false,
                columns: [
                    { headerText: 'To Do', keyField: 'Open', template: '#headerTemplate', allowToggle: true },
                    { headerText: 'In Progress', keyField: 'InProgress', template: '#headerTemplate', allowToggle: true },
                    { headerText: 'In Review', keyField: 'Testing', template: '#headerTemplate', allowToggle: true },
                    { headerText: 'Done', keyField: 'Done', template: '#headerTemplate', allowToggle: true }
                ],
                cardSettings: {
                    contentField: 'summary',
                    headerField: 'id',
                    template: '#cardTemplate',
                    selectionType: 'Multiple'
                },
                swimlaneSettings: {
                    keyField: 'assignee',
                }
            });


            kanbanObj.appendTo('#Kanban');
         }
      
         function WorkItemListClicked(args)
         {
             console.log(args);
            @*var incomingSprintDTO =
            {
                "ProjectId": @ProjectId,
                "WorkItemTypeId":7,
                "IterationId":  $("#Iterations :selected").val(),
                "PersonId": @Person
            }



             $.ajax({
                type: 'POST',
                url: '/Boards/GetSprints',
                data: JSON.stringify(incomingSprintDTO),
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                success: function(response) {
                    GenerateKaban(response);
                },
                error: function(xhr, status, error) {
                    console.log(error);
                }
            });*@
         }


      

         function CallUrl(url) {
             window.location.href = url;
    }

  
    
   
    function UserRowSelected(args)
    {
        selectedRowData = args.data;
        console.log(args);
    }
    function UserSelected(args)
    {
        selectedChanging.textContent = args.rowData.name;
        CancelAssign();
        ChangeCardOwner(selectedChanging.id, args.rowData.name);
    }
    function InitiliazeGrid()
    {
        console.log(data);


        var treeGridObj = new ej.treegrid.TreeGrid({
            dataSource: data,
            allowSelection: true,
            allowFiltering: true,
            allowSorting: true,
            toolbar: ['Search'],
            recordDoubleClick: EditWorkItem,
            enableVirtualization: true,
            filterSettings: { type: 'Menu' },
            selectionSettings: { persistSelection: true, type: "Multiple" },
            enableHover: false,
            allowPaging: true,
            pageSettings: { pageSize: 20 },
            columns: [
                { type: "checkbox", field: "", allowFiltering: false, allowSorting: false, width: '60' },
                { field: 'workItemType.TypeName', headerText: 'Type', width: 60 },
                { field: 'title', headerText: 'Title', width: 125 },
                { field: 'description', headerText: 'Description', width: 180 },
                { field: 'assignedAccountNavigation.Email', headerText: 'AssignedTo', width: 110 },
            ]
        });

        treeGridObj.appendTo('#TreeGrid');


    }

   
   

   
</script>


<script id="headerTemplate" type="text/x-jsrender">
    <div class="header-template-wrap">
        <div class="header-icon e-icons ${keyField}"></div>
        <div class="header-text">${headerText}</div>

    </div>
</script>
<script id="cardTemplate" type="text/x-jsrender">
    <div class='card-template ${priority}' style='content: "\e511 ";'>
        <div class='card-header e-tooltip-text'>
            <div class="row" style="display:flex;">
                <div class="col-2">
                    <span class="e-search ${priority}"></span>
                </div>
                <div class="col-10" style="width:100%; text-align:center;">
                    <span style="text-align:center;">${id} ${title}</span>
                </div>
            </div>
        </div>


        <div class='card-template-wrap'>
            <div class="row" style="padding:2%;">
                <div class='e-text'>${summary}</div>

            </div>
            <div class="row" style="padding:2%;">
                <div class='Interactice' onclick='ChangeOwner(this)' id='${id}'>${assgignedAccount}</div>
            </div>
            <div class="row status" style="display:flex;padding:2%;">

                <div class="col-3">
                    <span class='status'></span><div class='e-text' style="text-align:left;">Status:</div>
                </div>
                <div class="col-9" style="width:100%;">
                    <div class='Interactice'>${status}</div>
                </div>
            </div>

        </div>

    </div>
</script>