@{
    var channelRights = ViewData["UserAdministrativeRights"] as bool?;   
    var InputName = $"ChatInputSession{DateTime.Now.Day}{DateTime.Now.Hour}{DateTime.Now.Minute}{DateTime.Now.Millisecond}"; 
    var UserId = ViewData["UserId"] as int?;
    var UserRights = ViewData["UserRights"] as List<ChatRoomRights>;
    var ProjectId = ViewData["ProjectId"] as int?;
    var AdministrativeRights = ViewData["ProjectRight"] as UserRights;
}

<style>
 .ChipTag{
    background: red;
    border-radius: 15px;
    padding: 4px;
    color: white;
 }
 .ChipTag:hover{
    background: red;
    border-radius: 15px;
    padding: 4px;
    color: white;
    box-shadow: 0 4px 8px 0 rgba(0, 0, 0, 0.22);
 }

.ChipCloseBtn:before{
    content:'\e7e9';
    font-family: e-icons;
    padding:3px;
    font-size: 13px;
}
.AddNewRoleTag{
    cursor: pointer;
}
.AddNewRoleTag:before
{
    content:'\e823';
    font-family: e-icons;
    padding:3px;
    font-size: 13px;
    cursor: pointer;
}
.AddNewRoleTag:hover{
    color: red;
}
</style>

<div class="row">
    <input id="@InputName" onkeyup="UserKeyPressed()" style="margin: 5px;"/>
</div>
@if(AdministrativeRights.ChatChannelsRule == 1)
{
<div class="row" style="text-align: center;">
    <span class="AddNewRoleTag" onclick="OpenChatAssignRights(@UserId)">New Role</span>
</div>
}
<div class="row" style="padding: 15px;" id="ActiveTags">
    @foreach (var right in UserRights)
    {
        @if(AdministrativeRights.ChatChannelsRule == 1)
        {
            <span class="ChipTag" id="Tag_@right.Id">@right.RightName <span onclick="DeletingTag(@right.Id)" class="ChipCloseBtn" ></span></span>
        }
        else
        {
            <span class="ChipTag" id="Tag_@right.Id">@right.RightName</span>
        }
    }
     

</div>
<div class="row">
    <button class="btn btn-primary e-control e-btn e-lib e-outline e-primary" style="width: 100%;" onclick="CloseChatUserPreview()">Close</button>
</div>
<script>
var UserControlChatInput = new ej.inputs.TextBox({
    placeholder: "What's on your mind",
    floatLabelType: 'Auto'
});
UserControlChatInput.appendTo('#@InputName');


@* new ej.buttons.ChipList({ chips: window.chipsData.avatarData, enableDelete: true }, '#chip-avatar'); *@

function DeletingTag(currentTag)
{
    console.log(currentTag);
    $("#Tag_"+currentTag).html("");
     var messagesDto = {
        "Id": currentTag,
        "UserId" : ActiveQueryUser,
        "ProjectId" : @ProjectId
    }

    $.ajax({
            type: 'POST',
            url: '/Chat/DeleteUserTag',
            data: JSON.stringify(messagesDto),
            contentType: "application/json; charset=utf-8",
            dataType: "json",
            
            success: function (response) {
                 
            },
            error: function (xhr, status, error) {
                console.log(error);
            }
    });


    var dto = {
        "Id": @ProjectId,
     }

    $.ajax({
            type: 'POST',
            url: '/Chat/GetChatChannels',
            data: JSON.stringify(dto),
            contentType: "application/json; charset=utf-8",
            dataType: "json",
            
            success: function (response) {
               InitializeChatItems(response);
            },
            error: function (xhr, status, error) {
                console.log(error);
            }
    });
    CloseChatUserPreview();
}

function UserKeyPressed(args)
{
     // Number 13 is the "Enter" key on the keyboard
    if (event.keyCode === 13)
    {
        
        // Cancel the default action, if needed
        console.log("enter pressed");
        var dto = 
        {
            "ProjectId": @ProjectId,
            "Message" :$("#@InputName").val(),
            "ReciverId" : @UserId
        }

        $.ajax({
                type: 'POST',
                url: '/Chat/NewPersonalMessage',
                data: JSON.stringify(dto),
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                
                success: function (response) {
                    $(@InputName).val("");
                },
                error: function (xhr, status, error) {
                    console.log(error);
                }
        });
    }
}
</script>

