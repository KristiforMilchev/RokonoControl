@{
    var PagesData = ViewData["PageData"] as  List<AssociatedDocumentationCategoryPage>;
    var Category = ViewData["CategoryId"] as int?;
    var ProjectId = ViewData["ProjectId"] as int?;
    var UserRights = ViewData["UserRights"] as UserRights;
}
<style>
    #DocumentationPageControl img{
        width: 100%;
    }
    #DocumentationPageControl .row{
        padding: 20px;
    }
    .DocumentationMaxHeight{
        max-height: 83vh;
        overflow-y: auto;
    }

    .DocumentationMaxHeight html {
    scroll-behavior: smooth;
    }
    .SideLinkHolder{
        padding-left: 20px;
        padding-right: 20px;
        padding-top: 3px;
        padding-bottom: 3px;

        border-bottom: #e3165b 2px solid;
    }
    .SideLink{

        font-size: 18px;
        color: #797979;
    }
    .SideLink:hover{
        cursor: pointer;
        color:#e3165b;
    }
</style>
<div class="row">
    <div class="col-md-9 DocumentationMaxHeight">
        @if(PagesData != null)
        {
            @foreach (var currentPage in PagesData)
            {
                <div class="DocumentationSection" id="Current_@currentPage.Id" >
                    @if(UserRights.Documentation == 1)
                    {
                        <div class="row" style="display: block ruby;">
                            <hr/>
                                <button class="btn btn-primary e-control e-btn e-lib e-outline e-primary" style="width: 50%;" onclick="OpenEditPageModal(@currentPage.Id)">Edit page</button>
                                <button class="btn btn-primary e-control e-btn e-lib e-outline e-primary" style="width: 50%;" onclick="DeletePage(@currentPage.Id)">Delete page</button>
                            <hr/>
                        </div>
                    }
                    <div class="DocumentationBody">
                        @Html.Raw(currentPage.Content)
                    </div>
                </div>
            }        
        }
        @if(UserRights.Documentation == 1)
        {
            <div class="row">
                <hr/>
                    <button class="btn btn-primary e-control e-btn e-lib e-outline e-primary" style="width: 100%;" onclick="OpenNewPageModal(0)">Add new page</button>
                <hr/>
            </div>
        }
    </div>
    <div class="col-md-3 DocumentationMaxHeight">
        @if(PagesData != null)
        {
            @foreach (var quickLink in PagesData)
            {
                <div class="row SideLinkHolder">
                    <a href="#Current_@quickLink.Id"  class="SideLink"> @quickLink.Title</a>
                </div>
            }
        }
    </div>
</div>
<div id="NewPageModalHodler">
 
</div>
<link href="https://cdn.quilljs.com/1.3.6/quill.snow.css" rel="stylesheet">
<!-- Main Quill library -->
<script src="//cdn.quilljs.com/1.3.6/quill.js"></script>
<script src="//cdn.quilljs.com/1.3.6/quill.min.js"></script>

<script>
    function OpenNewPageModal()
    {
        $("#NewPageModalHodler").html("");
        $("#NewPageModalHodler").load("/Documentation/GetPageModal?id=0&&category=@Category&&projectId=@ProjectId")
        .ajaxSuccess(x => {
            console.log("Success")
        });
        
    }

    function OpenEditPageModal(id)
    {
        console.log(id);
        $("#NewPageModalHodler").html("");
        $("#NewPageModalHodler").load("/Documentation/GetPageModal?id="+id+"&&category=@Category&&projectId=@ProjectId")
        .ajaxSuccess(x => {
            console.log("Success")
        });
        
    }
    function DeletePage(id)
    {
        $("#DocumentationPageControl").html("");

        var data = {
            "Id": id
            
        }
        $.ajax({
            type: 'POST',
            url: '/Documentation/DeletePage',
            data: JSON.stringify(data),
            contentType: "application/json; charset=utf-8",
            dataType: "json",
            success: function (response) {
                $("#DocumentationPageControl").load('/Documentation/DocumentationPage?id='+@Category+'&&projectId=@ProjectId');

            },
            error: function (xhr, status, error) {
                console.log(error);
            }
        }); 
     
    }
  
</script>