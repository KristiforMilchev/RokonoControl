@{
    var CategoryFieldId = ViewData["CategoryField"] as int?;
    var PageData = ViewData["PageData"] as AssociatedDocumentationCategoryPage;
    var ModalType = ViewData["Modal"]  as int?;
}


<style>
   
    #SaveDocumentationPage_title{
        text-align: center;
        width: 100%;
    }
    .e-upload {
        width: 100%;
        position: relative;
        margin-top: 15px;
        float: none;
    }
    .e-upload .e-upload-actions {
        float: none;
        text-align: right;
    }
    .control_wrapper .e-upload .e-upload-drag-hover {
        margin: 0;
    }
</style>

<div id="SaveDocumentationPage"  >
    <div class="container-fluid">
        <div class="row">
            <input id="InputPageDataTitle" />
        </div>
         <div class="row">
            <div class="control_wrapper">
                <!-- Initialize Uploader -->
                <input type='file' id='fileupload' name='UploadFiles'/>
            </div>
        </div>
        <div class="row">
            <div style="min-height: 51vh;" id="InputPageData" class="form-control"></div>
        </div>
        <div class="row InlineFlex">
            <button class="btn btn-primary e-control e-btn e-lib e-outline e-primary" style="width: 50%;" onclick="SubmitDocumentationPage()">Submit</button>
            <button class="btn btn-primary e-control e-btn e-lib e-outline e-primary" style="width: 50%;" onclick="CloseDocumentationPage()">Cancel</button>
        </div>
    </div>

</div>

<script>
var Modal = "@ModalType";
var activeFiles = [];
var InputPageData;
var InputPageDataTitle = new ej.inputs.TextBox({
    placeholder: 'The title of the current page item',
    floatLabelType: 'Auto',
});
@if(PageData != null)
{
  @:  InputPageDataTitle.value = @PageData.Title
}
InputPageDataTitle.appendTo('#InputPageDataTitle');
@if(PageData != null)
{
@:    InputPageData = new Quill('#InputPageData', {
@:            theme: 'snow',
@:            value : @PageData.Content
@:    });
}

@if(PageData == null)
{
@:    InputPageData = new Quill('#InputPageData', {
@:            theme: 'snow',
@:    });
}


var method;
 
var SaveDocumentationPageModal;
SaveDocumentationPageModal = new ej.popups.Dialog({
    width: '100%',
    height: '100%',
    header: 'Enter the page details',
    isModal: true,
    animationSettings: { effect: 'None' },
    visible: false
});
SaveDocumentationPageModal.appendTo('#SaveDocumentationPage');
SaveDocumentationPageModal.show();
var dropElement = document.getElementsByClassName('control-fluid')[0];

var uploadObj = new ej.inputs.Uploader({
    asyncSettings: {
        saveUrl: '/Uploader/Save',
        removeUrl: '/Uploader/Remove',

    },
    removing: onFileRemove,
    dropArea: dropElement,
    selected: ItemSelected

});
uploadObj.appendTo('#fileupload');
function ItemSelected(args) {
    console.log(args);
    selectedImage = window.location.origin+"/Files/Uploads/"+args.filesData[0].rawFile.name;
    var length = InputPageData.getLength();
    console.log(length);
    activeFiles.push({
        "FileName":args.filesData[0].rawFile.name,
        "Line" : length+1
    });
    InputPageData.insertEmbed(length+1, 'image', selectedImage);

}
var Delta;

function onFileRemove(args) {
    console.log(args);
    args.postRawFile = false;
}

 
function CloseDocumentationPage()
{
    SaveDocumentationPageModal.hide();

}

function SubmitDocumentationPage()
{
    var method;
    var messagesDto = {
        "Id" : 0,
        "Title" : $("#InputPageDataTitle").val(),
        "CategoryField" : @CategoryFieldId,
        "Content" :  $("#InputPageData").children()[0].innerHTML
    }
    @if(PageData == null)
    {
    @:    method = "AddNewPage";
    }
    @if(PageData != null)
    {
    @:   messagesDto.Id = @PageData.Id;
    @:   method = "EditPage";
    }
    
    console.log(messagesDto);
    console.log($("#InputPageDataTitle").val());
    if($("#InputPageDataTitle").val())
    {

        $.ajax({
                type: 'POST',
                url: '/Documentation/'+method,
                data: JSON.stringify(messagesDto),
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                
                success: function (response) {
//                    CloseNewCategoryModal();
                },
                error: function (xhr, status, error) {
                    console.log(error);
                }
        });
    }
    else
        ShowAlert("Input field Title Name must contain a value!!!");
}
 
</script>