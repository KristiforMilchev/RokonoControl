@{
    var UserId = ViewData["UserId"] as int?;
    var Notifications = ViewData["Notificiations"] as List<Notifications>;
    var ProjectId = ViewData["ProjectId"] as int?;
}

<style type="text/css" class="cssStyles">
    .photo img {
        width: 100px;
        height: 100px;
        border-radius: 50px;
        box-shadow: inset 0 0 1px #e0e0e0, inset 0 0 14px rgba(0,0,0,0.2);
    }
    
    @@media screen and (max-width: 600px) and (min-width: 320px) {
        .photo img {
            width: 50px;
            height: 50px;
        }
    }
    
    @@media screen and (max-width: 800px) and (min-width: 600px) {
        .photo img {
            width: 70px;
            height: 70px;
        }
    }
    
    .photo,
    .details {
        border-color: #e0e0e0;
        border-style: solid;
    }
    
    .photo {
        border-width: 1px 0px 0px 0px;
        text-align: center;
        width: 70px;
    }
    
    .details {
        border-width: 1px 0px 0px 0px;
        padding-left: 18px;
    }

    .e-bigger .details {
        padding-left: 25px;
    }

    .e-device .details {
        padding-left: 8px;
    }
    
    .details > table {
        width: 100%;
    }
    
    .CardHeader {
        font-weight: 600;
    }
    
  .e-grid .e-gridheader{
         padding:0px;
     }
</style>
<script id="currentTemplate" type="text/x-template">
    <tr>
        <td class="photo">
            <img src="src/grid/images/${notificationTypeNavigation.notificationType}.png" alt="${notificationTypeNavigation.notificationType}" />
        </td>
        <td class="details">
            <table class="CardTable"  >
               
                <tbody>
                    
                    <tr>
                        <td class="CardHeader">Content:</td>
                        <td>${content} </td>
                    </tr>
                </tbody>
            </table>
        </td>
    </tr>
</script>
 
        <div  id="NotificationGridWrapper">
            <div id="NotificationHolderGrid" style="padding:0px;"></div>
        </div>
 


<script>


    var dto = {
        "ProjectId": @ProjectId
        
    }
    console.log(dto);
    $.ajax({
        type: 'POST',
        url: '/Notification/GetUserNotifications',
        data: JSON.stringify(dto),
        contentType: "application/json; charset=utf-8",
        dataType: "json",
        success: function (response) {
            InitiliazeNotificationGrid(response);
        },
        error: function (xhr, status, error) {
            console.log(error);
        }
    });

    function InitiliazeNotificationGrid(data)
    {
        console.log(data);
        $("#NotificationGridWrapper").html("");
        $("#NotificationGridWrapper").html("<div id=\"NotificationHolderGrid\"></div>");
        var grid = new ej.grids.Grid({
            dataSource: data,
            rowTemplate: '#currentTemplate',
            height: $("#sidebar-treeview").height,
            width: 'auto',
            columns: [
                { headerText: 'Type', textAlign: 'Center', field: 'notificationTypeNavigation.notificationType' },
                { headerText: 'Notification Content', field: 'content', textAlign: 'Left' }
            ]
        });
        grid.appendTo('#NotificationHolderGrid');
    }



    //Toast initialization 

     @* var toastObj = new ej.notifications.Toast({
        position: {
            X: 'Right'
        }, target: document.body,
        close: onclose,
        beforeOpen: onBeforeOpen
    });
    toastObj.appendTo('#toast_type');
    var toasts = [
        { title: 'Warning!', content: 'There was a problem with your network connection.', cssClass: 'e-toast-warning', icon: 'e-warning toast-icons' },
        { title: 'Success!', content: 'Your message has been sent successfully.', cssClass: 'e-toast-success', icon: 'e-success toast-icons' },
        { title: 'Error!', content: 'A problem has been occurred while submitting your data.', cssClass: 'e-toast-danger', icon: 'e-error toast-icons' },
        { title: 'Information!', content: 'Please read the comments carefully.', cssClass: 'e-toast-info', icon: 'e-info toast-icons' }
    ];
    setTimeout(function () {
        toastObj.show(toasts[3]);
    }, 200);
      function onclose (e){
        if (e.toastContainer.childElementCount === 0 ) {
            document.getElementById('hideTosat').style.display = 'none';
        }
     }
   
    function onBeforeOpen (){
        document.getElementById('hideTosat').style.display = 'inline-block';
     }

    document.getElementById('hideTosat').onclick = function () {
        toastObj.hide('All');
    }; *@
   
</script>