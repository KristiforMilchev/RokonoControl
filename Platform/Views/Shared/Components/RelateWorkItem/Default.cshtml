 @{
    var projectId = ViewData["ProjectId"] as int?;
    var WorkItemData = ViewData["WorkItemId"] as int?;
 }
 <div class="modal bd-example-modal-lg" id="WorItemsGridPanel" tabindex="-1" role="dialog" aria-labelledby="myLargeModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div id="ModalAdd">
                <div class="ModalInnerFix">
                    <div class="row">
                        <p>Relation Type</p>
                    </div>
                    <div class="row">
                                        
                        <select class="form-control-sm form-control"  id="WorkItemRelationsGrid">
                        
                        </select>
                    
                    </div>
                    <div class="row">
                        
                        <div class="e-input-group e-float-icon-left">
                            <span class="e-input-group-icon e-input-picture" onclick="CallItemSelect();"></span>
                            <div class="e-input-in-wrap">
                            <input class="e-input" id="workItemInputObj" type="text" placeholder="Upload Picture" />
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <div id="ModalSelect" hidden>
                <div class="ModalInnerFix">
                    <h3> Select work item</h3>
                    <div class="row">
                        <div class="control-section">
                            <div class="content-wrapper">
                                <div id="Grid"></div>
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <button   id="AcceptWItemChange">Add</button>
                        <button   id="CancelAddWItemBtn" onclick="CancelGridGlicked()">Cancel</button>

                    </div>
                </div>
            </div>
        </div>

    </div>
</div>


      <!-- end of main-content -->
<script src="https://code.jquery.com/jquery-3.4.1.min.js" ></script>
<script src="https://cdn.jsdelivr.net/npm/popper.js@1.16.0/dist/umd/popper.min.js" integrity="sha384-Q6E9RHvbIyZFJoft+2mJbHaEWldlvI9IOYy5n3zV9zzTtmI3UksdQRVvoxMfooAo" crossorigin="anonymous"></script>
<script src="https://stackpath.bootstrapcdn.com/bootstrap/4.4.1/js/bootstrap.min.js" integrity="sha384-wfSDF2E50Y2D1uUdj0O3uMBJnjuUD4Ih7YwaYd1iqfktj0Uod8GCExl3Og8ifwB6" crossorigin="anonymous"></script>
<script>
    var selectedChildren = [];

    var id = @projectId;
     var AssociationHander = {
        "WorkItemId": 0,
        "CurrWorkItemId" : 0,
        "ProjectId" : 0,
        "RelationType" :  0,
        "LinkedItems" : 0
    }
    
    console.log(id);
    var dto = {
        "id": id,
        "Phase": "!"
    }
    $.ajax({
            type: 'POST',
            url: '/Backlogs/GetWorkItems',
            data: JSON.stringify(dto),
            contentType: "application/json; charset=utf-8",
            dataType: "json",
            success: function (response) {
                InitializeRelateWorkItemsGrid(response);
            },
            error: function (xhr, status, error) {
                console.log(error);
            }
        });
    function CallItemSelect()
    {
        $("#ModalAdd").hide();
        $("#ModalSelect").show();
        
    }

    function CancelGridGlicked()
    {
        $("#ModalAdd").show();
        $("#ModalSelect").hide();
    }


    function InitializeRelateWorkItemsGrid(data )
    {
        console.log(data);
        ej.grids.Grid.Inject(ej.grids.Filter);
        ej.grids.Grid.Inject(ej.grids.Edit, ej.grids.Toolbar);

       console.log(data);
        var grid = new ej.grids.Grid({
            dataSource: data,
            allowSorting: true,
            height: "660px",
            filterSettings: { type:'Menu' },
            allowFiltering: true,
            recordDoubleClick : WorkItemSelected,
            columns: [
                { field: 'id', headerText: 'Id', width: 125 },
                { field: 'title', headerText: 'Title', width: 125 },
                { field: 'description', headerText: 'Description', width: 180 },
                { field: 'assignedAccountNavigation.Email', headerText: 'AssignedTo', width: 110 },

            ]
        
        });
        
        grid.appendTo('#Grid');
    }
    function WorkItemSelected(args){
        console.log(args);
     
       AddAssocuatedItem(args.rowData.id);
    }

   
    function AddAssocuatedItem(id){
        var project = @projectId;

        
        var AssociationHander = {
            "WorkItemId": id,
            "CurrWorkItemId" : @WorkItemData,
            "ProjectId" : project,
            "RelationType" :  $("#WorkItemRelationsGrid :selected").val(),
            "LinkedItems" : selectedChildren
        }
        console.log(dto);
         $.ajax({
            type: 'POST',
            url: '/Dashboard/ValidateSelectedItem',
            data: JSON.stringify(AssociationHander),
            contentType: "application/json; charset=utf-8",
            dataType: "json",
            success: function (response) {
                console.log(response);
                if(response.valid === true)
                {

                    var wItemDTO = {
                            "WorkItemId" : response.workItemId,
                            "RelationShipId": response.relationshipId
                        };
                    selectedChildren.push(wItemDTO);
                    $("#listview-defholder").html("");
                    var res = "";
                    res += "<div id=\"listview-def\" tabindex=\"1\" >";

                    res += "<ul>";
                    response.workItem.forEach(element => 
                    {
                        if(element.workItemTypeId === 1)
                            res += "<li value=\"/Dashboard/EditWorkItem?projectId="+@projectId+"&&workItem="+element.id+"&returnUrl="+window.location.href+" \"><i class=\"fas fa-bug\" style=\"padding:3px;\" ></i>"+element.title+"</li>";
                        else if(element.workItemTypeId === 5)
                            res += "<li value=\"/Dashboard/EditWorkItem?projectId="+@projectId+"&&workItem="+element.id+"&returnUrl="+window.location.href+" \"><i class=\"fas fa-crown\"  style=\"padding:3px;\"></i>"+element.title+"</li>";
                        else if(element.workItemTypeId === 6)
                            res += "<li value=\"/Dashboard/EditWorkItem?projectId="+@projectId+"&&workItem="+element.id+"&returnUrl="+window.location.href+" \"><i class=\"fas fa-exclamation-triangle\"  style=\"padding:3px;\"></i>"+element.title+"</li>";
                        else if(element.workItemTypeId === 4)
                            res += "<li value=\"/Dashboard/EditWorkItem?projectId="+@projectId+"&&workItem="+element.id+"&returnUrl="+window.location.href+" \"><i class=\"fas fa-vial\"  style=\"padding:3px;\"></i>"+element.title+"</li>";
                        else if(element.workItemTypeId === 7)
                            res += "<li value=\"/Dashboard/EditWorkItem?projectId="+@projectId+"&&workItem="+element.id+"&returnUrl="+window.location.href+" \"><i class=\"fas fa-user-circle\"  style=\"padding:3px;\"></i>"+element.title+"</li>";
                        else if(element.workItemTypeId === 3)
                            res += "<li value=\"/Dashboard/EditWorkItem?projectId="+@projectId+"&&workItem="+element.id+"&returnUrl="+window.location.href+" \"><i class=\"fas fa-tasks\"  style=\"padding:3px;\"></i>"+element.title+"</li>";
                        else if(element.workItemTypeId === 2)
                            res += "<li value=\"/Dashboard/EditWorkItem?projectId="+@projectId+"&&workItem="+element.id+"&returnUrl="+window.location.href+" \"><i class=\"fas fa-cog\"  style=\"padding:3px;\"></i>"+element.title+"</li>";
                      
                    });
                    res += "</ul>";
                    res += "</div>";
                    $("#listview-defholder").html(res);

                    var listObj = new ej.lists.ListView();

                    //Render initialized ListView component
                    listObj.appendTo('#listview-def');
                    console.log(response);
                 }
                else
                {
                    alert("Item with ID" + id+ " Is already linked with the current work item please chose another item!");
                    for(var i = selectedChildren.length - 1; i >= 0; i--) {
                        if(selectedChildren[i].WorkItemId === id) {
                            selectedChildren.splice(i, 1);
                        }
                    }
                }
                $("#ModalAdd").show();
                $("#ModalSelect").hide();
                $("#WorItemsGridPanel").modal('hide');
            },
            error: function (xhr, status, error) {
                console.log(error);
            }
        });
        console.log(selectedChildren);
    }


    function ChangeWorkItemId(id)
    {
        console.log("in "+ id);
        AssociationHander.CurrWorkItemId = id;
    }
    function  LoadWorkItemsGrid()
    {
          $.ajax({
            type: 'GET',
            url: '/Dashboard/GetAllWorkItems?projectId=@projectId',
            contentType: "application/json; charset=utf-8",
            dataType: "json",
            success: function (response) {
                console.log(response);
                 var grid = new ej.grids.Grid({
                    dataSource: response,
                    recordDoubleClick: WorkItemGridDoubleClicked,
                    columns: [
                        { field: 'id', headerText: 'ID', width: 60, textAlign: 'Right' },
                        { field: 'title', headerText: 'Title', width: 150 },
                        { field: 'itemState', headerText: 'State', width: 130, format: 'yMd', textAlign: 'Right' },
                        { field: 'itemType', width: 120, format: 'Type', textAlign: 'Right' }
                    ]
                });
                grid.appendTo('#WorkItemsGrid');
            },
            error: function (xhr, status, error) {
                console.log(xhr);
            }
        });
    }

    function WorkItemGridDoubleClicked(args)
    {
  
        AddAssocuatedItem(args.rowData.id);
        
    }

    function OpenModal()
    {
        console.log("Open modal");
        $.ajax({
            type: 'GET',
            url: '/Dashboard/GetWorkItemRelations',
            contentType: "application/json; charset=utf-8",
            dataType: "json",
            success: function (response) {
                response.forEach(function(element) {
                    console.log(element);
                    $("#WorkItemRelationsGrid").append("<option value=\""+element.id+"\">"+element.relationName+"</option>");
                });
               $('#WorItemsGridPanel').modal('show'); 
               var element = document.getElementsByClassName("modal-backdrop show");
                $(element).remove();
            },
            error: function (xhr, status, error) {
                console.log(xhr);
            }
        });
   //     $('#WorItemsGridPanel').modal('show'); 

    }

</script>