@{
    var ProjectId = ViewData["ProjectId"] as int?;
    var BoardId = ViewData["BoardId"] as int?;

}

<!doctype html>
<html>
<head>
<link href="~/css/Shared/_LayoutDashboard.css" rel="stylesheet" />

<script src="https://code.jquery.com/jquery-3.4.1.min.js"></script>

    <script src="https://cdn.syncfusion.com/ej2/dist/ej2.min.js" type="text/javascript"></script>
    <link href="https://cdn.syncfusion.com/ej2/material.css" rel="stylesheet">
    <link href="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css" rel="stylesheet">
    <script src="~/js/DataHandlers.js" type="text/javascript"></script>

</head>
<body>
    <div class="stackblitz-container material">
        <div class="control-section">

            <!-- sample level element  -->
            <div id="wrapper">

                <!--header-section  declaration -->
                <div class="main-header" id="header-section">
                    <ul class="header-list">
                        <li class="float-left header-style icon-menu" id="hamburger"></li>
                        <li class="float-left header-style nav-pane">
                            @await Component.InvokeAsync("GetProjectName", @ProjectId)
                        </li>

                        <li class="header-style float-right support border-left" onclick="CallUrl(https://platform.rokonocontrol.com/OutboundDetails/RelatedProject?projectId=5012)"><b>Support</b></li>
                        <li class="header-style float-right support border-left" onclick="ChatToggle(1)"><b>Open Chat</b></li>
                        <li class="header-style float-right support border-left">
                            <b>
                                <button class="btn btn-primary e-control e-btn e-lib e-outline e-primary" style="color: white; border-color:white" id="hideTosat"> Hide All </button>
                            </b>
                        </li>

                    </ul>
                </div>
                <!-- end of header-section -->
                <div id="PlatformElement">
                    <!-- sidebar element declaration -->
                    <aside id="sidebar-treeview" style="overflow-x:hidden;">
                        <div class="main-menu">
                            <div class="table-content" style="padding:0;">
                                @await Component.InvokeAsync("ManagementRights", @ProjectId)
                                @await Component.InvokeAsync("UserSettings", @ProjectId)
                                @await Component.InvokeAsync("LoadedProjects", @ProjectId)
                                @await Component.InvokeAsync("GetProjectLogo", @ProjectId)
                                @await Component.InvokeAsync("SearchBox", @ProjectId)
                                <div class="row" style="margin:0;">
                                    <p class="main-menu-header">Navigation</p>
                                    <button type="button" id="NotesBtn" class="btn btn-primary" style="margin-top:2px; width:100%" onclick="ShowNotes()">Notes</button>
                                </div>
                                <div id="NavGrid">
                                    @await Component.InvokeAsync("NavigationMenu", @ProjectId)
                                </div>
                                <div id="NotificationGrid" style="display: none;">
                                    @await Component.InvokeAsync("NotificationPanel", @ProjectId)
                                </div>

                            </div>
                        </div>
                    </aside>

                    <div class="main-content" id="main-text" style="min-height: 94vh;">
                        <div class="sidebar-content">
                            @await Component.InvokeAsync("Notes", @ProjectId)

                            @RenderBody()
                        </div>
                    </div>
                </div>
                <div id="ChatElement" hidden>
                    @await Component.InvokeAsync("ChatSidebar", @ProjectId)

                </div>

            </div>


        </div>

    </div>

    <script>

    var IsOpen = 0;

    var data;
    // Sidebar Initialization
    var sidebarMenu = new ej.navigations.Sidebar({
        width: '290px',
        target: '.main-content',
        mediaQuery: '(min-width: 600px)',
    });
    sidebarMenu.appendTo('#sidebar-treeview');
    //end of Sidebar initialization


    // Toggle the Sidebar
    document.getElementById('hamburger').addEventListener('click', function () {
        sidebarMenu.toggle();
        sidebarChat.toggle();
    });
    // open new tab



    function CallUrl(url)
    {
        window.location.href = url;
    }

    function ShowLoader()
    {
        $("#spinner").show();
        $("#Content").hide();
    }
    function ShowContent()
    {
        $("#spinner").hide();
        $("#Content").show();
    }

    function ChatToggle(val)
    {
        if(IsOpen == 1)
        {
            $("#PlatformElement").slideToggle();
            $("#ChatElement").slideToggle();
        }
        else
        {
            $("#PlatformElement").slideToggle();
            $("#ChatElement").slideToggle();
        }
        IsOpen = val;
    }

    function gettoken() {
        var token = '@Html.AntiForgeryToken()';
        token = $(token).val();
        return token;
   }
    </script>
    <script src="https://kit.fontawesome.com/a076d05399.js">

    </script>

    <style>
        .sb-mobile-diagram {
            width: 100%;
            height: 100%;
            float: left;
        }

    </style>
</body>
</html>



