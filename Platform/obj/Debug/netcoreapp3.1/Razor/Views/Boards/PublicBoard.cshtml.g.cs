#pragma checksum "/home/dwarfdevelopment/Projects/GitClones/RokonoControl/Platform/Views/Boards/PublicBoard.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "f6f2e7329b61acf9ef7f7b43d89fb274c7e6d8d4"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Boards_PublicBoard), @"mvc.1.0.view", @"/Views/Boards/PublicBoard.cshtml")]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#nullable restore
#line 1 "/home/dwarfdevelopment/Projects/GitClones/RokonoControl/Platform/Views/_ViewImports.cshtml"
using Rokono_Control;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "/home/dwarfdevelopment/Projects/GitClones/RokonoControl/Platform/Views/_ViewImports.cshtml"
using Rokono_Control.Models;

#line default
#line hidden
#nullable disable
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"f6f2e7329b61acf9ef7f7b43d89fb274c7e6d8d4", @"/Views/Boards/PublicBoard.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"9a3d88b77ca5ff650022e07aede809867a9af767", @"/Views/_ViewImports.cshtml")]
    public class Views_Boards_PublicBoard : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    {
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_0 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("href", new global::Microsoft.AspNetCore.Html.HtmlString("~/Syncfusion/ej2/material.css"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_1 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("rel", new global::Microsoft.AspNetCore.Html.HtmlString("stylesheet"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_2 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("href", new global::Microsoft.AspNetCore.Html.HtmlString("~/css/Sprints/Sprints.css"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        #line hidden
        #pragma warning disable 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperExecutionContext __tagHelperExecutionContext;
        #pragma warning restore 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner __tagHelperRunner = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner();
        #pragma warning disable 0169
        private string __tagHelperStringValueBuffer;
        #pragma warning restore 0169
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __backed__tagHelperScopeManager = null;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __tagHelperScopeManager
        {
            get
            {
                if (__backed__tagHelperScopeManager == null)
                {
                    __backed__tagHelperScopeManager = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager(StartTagHelperWritingScope, EndTagHelperWritingScope);
                }
                return __backed__tagHelperScopeManager;
            }
        }
        private global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper;
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
#nullable restore
#line 1 "/home/dwarfdevelopment/Projects/GitClones/RokonoControl/Platform/Views/Boards/PublicBoard.cshtml"
  
    ViewData["Title"] = "Board";
    Layout = "~/Views/Shared/_LayoutProjects.cshtml";
    var ProjectId = ViewData["ProjectId"];
    var WorkItemTypes = ViewData["WorkItemTypes"] as List<WorkItemTypes>;
    var ProjectName = ViewData["ProjectName"] as string;
    var Iteration = ViewData["Iteration"] as int?;
    var Person = ViewData["Person"] as int?;
    var ViewRights = ViewData["GetUserViewRights"] as int?;

#line default
#line hidden
#nullable disable
            WriteLiteral("<script src=\"https://code.jquery.com/jquery-3.4.1.min.js\"></script>\n\n \n");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("link", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.SelfClosing, "f6f2e7329b61acf9ef7f7b43d89fb274c7e6d8d44851", async() => {
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_0);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_1);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\n<link href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css\" rel=\"stylesheet\">\n\n<!--[if lt IE 9]>\n<script src=\"../scripts/jquery-1.11.3.min.js\" type=\"text/javascript\" ></script>\n<![endif]-->\n");
            WriteLiteral("<!--<![endif]-->\n");
            WriteLiteral("\n");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("link", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.SelfClosing, "f6f2e7329b61acf9ef7f7b43d89fb274c7e6d8d46254", async() => {
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_2);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_1);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral(@"


<style>
    /* end of icon styles */
#loader {
    position: absolute;
    left: 50%;
    top: 50%;
    z-index: 1;
    width: 150px;
    height: 150px;
    margin: -75px 0 0 -75px;
    border: 16px solid #f3f3f3;
    border-radius: 50%;
    border-top: 16px solid #e6326f;
    width: 120px;
    height: 120px;
    -webkit-animation: spin 2s linear infinite;
    animation: spin 2s linear infinite;
    }

    ");
            WriteLiteral("@-webkit-keyframes spin {\n    0% { -webkit-transform: rotate(0deg); }\n    100% { -webkit-transform: rotate(360deg); }\n    }\n\n    ");
            WriteLiteral(@"@keyframes spin {
    0% { transform: rotate(0deg); }
    100% { transform: rotate(360deg); }
    }

    /* Add animation to ""page content"" */
    .animate-bottom {
    position: relative;
    -webkit-animation-name: animatebottom;
    -webkit-animation-duration: 1s;
    animation-name: animatebottom;
    animation-duration: 1s
    }

    ");
            WriteLiteral("@-webkit-keyframes animatebottom {\n    from { bottom:-100px; opacity:0 } \n    to { bottom:0px; opacity:1 }\n    }\n\n    ");
            WriteLiteral(@"@keyframes animatebottom { 
    from{ bottom:-100px; opacity:0 } 
    to{ bottom:0; opacity:1 }
    }

    #myDiv {
    display: none;
    text-align: center;
    }   
    .table-content {
        padding: 0;
    }

    #spinner{
        min-height: 90vh;
    }
</style>
<!-- end of sidebar element -->
<!-- main-content declaration -->
  
        <div id=""spinner"">
             <div id=""loader""></div>
        </div>
        <div id=""Content"" style=""display: none;"">
        <div class=""main-card mb-12 card"">
            <div class=""card-body text-center"">

                <div class=""page-title-heading"">
                    <div class=""page-title-icon"">
                        <i class=""pe-7s-graph text-success"">
                        </i>
                    </div>
                    <div>
                       Public Project Dashboard
                        <div class=""page-title-subheading"">
                            ");
#nullable restore
#line 110 "/home/dwarfdevelopment/Projects/GitClones/RokonoControl/Platform/Views/Boards/PublicBoard.cshtml"
                       Write(ProjectName);

#line default
#line hidden
#nullable disable
            WriteLiteral(@"
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class=""row"">


            <div class=""col-md-5"">
             
            </div>
            <div class=""col-md-3"">

            </div>
            <div class=""col-md-4"">
                <button type=""button"" id=""Iterations"" class=""btn btn-primary"">Active Iteration</button>
            </div>
        </div>
        <div class=""row"">
            <div class=""cols-sample-area"" id=""board"">

                <div id=""KanbanHolder"">
                    <div id=""Kanban""></div>
                </div>

            </div>
        </div>
        </div>
        
 



<script type=""text/javascript"">
ShowLoader();
        var publicCheck = new ejs.buttons.Switch({ checked: false });
        publicCheck.appendTo('#publicCheck');

        var dialogObj;
        var iconbtn = new ej.buttons.Button({ cssClass: 'e-outline', isPrimary: true });
        iconbtn.appendTo('#iconbtn');
        var backlog");
            WriteLiteral(@"Btn = new ej.buttons.Button({ cssClass: 'e-outline', isPrimary: true });
        backlogBtn.appendTo('#backlogBtn');
        var capacityBtn = new ej.buttons.Button({ cssClass: 'e-outline', isPrimary: true });
        capacityBtn.appendTo('#capacityBtn');
        var analitycsBtn = new ej.buttons.Button({ cssClass: 'e-outline', isPrimary: true });
        analitycsBtn.appendTo('#analitycsBtn');


        var assignBtn = new ej.buttons.Button({ cssClass: 'e-outline', isPrimary: true });
        assignBtn.appendTo('#assignBtn');

        var cancelBtn = new ej.buttons.Button({ cssClass: 'e-outline', isPrimary: true });
        cancelBtn.appendTo('#cancelBtn');

    // DropDownButton items declaration


        ej.base.enableRipple(true);
        var selectedChanging;
        var selectedRowData;
        var card;
        var gData;
        window.getTags = function (data) {
            var tagDiv = '<div class=""e-tags"">';
            var tags = data.Tags.split(',');
            for (var i = 0; i < tags.length; ");
            WriteLiteral(@"i++) {
                var tag = tags[i];
                tagDiv = tagDiv.concat('<div class=""e-tag e-tooltip-text"">' + tag + '</div>');
            }
            return tagDiv.concat('</div>');
        };

     
        $(function() {

            
            var incomingSprintDTO =
            {
                ""ProjectId"": ");
#nullable restore
#line 190 "/home/dwarfdevelopment/Projects/GitClones/RokonoControl/Platform/Views/Boards/PublicBoard.cshtml"
                        Write(ProjectId);

#line default
#line hidden
#nullable disable
            WriteLiteral(",\n                \"WorkItemTypeId\": $(\"#ItemPriority :selected\").val(),\n                \"IterationId\": ");
#nullable restore
#line 192 "/home/dwarfdevelopment/Projects/GitClones/RokonoControl/Platform/Views/Boards/PublicBoard.cshtml"
                          Write(Iteration);

#line default
#line hidden
#nullable disable
            WriteLiteral(",\n                \"PersonId\": ");
#nullable restore
#line 193 "/home/dwarfdevelopment/Projects/GitClones/RokonoControl/Platform/Views/Boards/PublicBoard.cshtml"
                       Write(Person);

#line default
#line hidden
#nullable disable
            WriteLiteral(",\n                \"All\" : ");
#nullable restore
#line 194 "/home/dwarfdevelopment/Projects/GitClones/RokonoControl/Platform/Views/Boards/PublicBoard.cshtml"
                   Write(ViewRights);

#line default
#line hidden
#nullable disable
            WriteLiteral(@"
            }



             $.ajax({
                type: 'POST',
                url: '/Boards/GetSprintsPublic',
                data: JSON.stringify(incomingSprintDTO),
                contentType: ""application/json; charset=utf-8"",
                dataType: ""json"",
                success: function(response) {
                    GenerateKaban(response);
                },
                error: function(xhr, status, error) {
                    console.log(error);
                }
            });
            var iterationDTO = {
                ""Iteration"": ");
#nullable restore
#line 213 "/home/dwarfdevelopment/Projects/GitClones/RokonoControl/Platform/Views/Boards/PublicBoard.cshtml"
                        Write(Iteration);

#line default
#line hidden
#nullable disable
            WriteLiteral(",\n                \"ProjectId\":");
#nullable restore
#line 214 "/home/dwarfdevelopment/Projects/GitClones/RokonoControl/Platform/Views/Boards/PublicBoard.cshtml"
                       Write(ProjectId);

#line default
#line hidden
#nullable disable
            WriteLiteral(@",
                ""IsPublic"": true
            }

            $.ajax({
                type: 'POST',
                url: '/Boards/GetIterations',
                data: JSON.stringify(iterationDTO),
                contentType: ""application/json; charset=utf-8"",
                dataType: ""json"",
                success: function(response) {
                    var Iterations = new ej.splitbuttons.DropDownButton({ items: response, iconCss: 'e-ddb-icons e-profile',cssClass: 'e-outline', select:WorkItemListClicked });
                    Iterations.appendTo('#Iterations');
                },
                error: function(xhr, status, error) {
                    console.log(error);
                }
            });
           

		 });


         function GenerateKaban(response)
         {
             $(""#KanbanHolder"").html(""<div id=\""Kanban\""></div>"");
             $(""#KanbanHolder"").html();

            var data = ej.base.extend([], response, null, true); // To maintain the property changes, extend the obje");
            WriteLiteral(@"ct.
            console.log(data);
            var kanbanObj = new ej.kanban.Kanban({
                dataSource: data,
                keyField: 'status',
                enableTooltip: true,
                allowDragAndDrop: false,
                columns: [
                    { headerText: 'To Do', keyField: 'Open', template: '#headerTemplate', allowToggle: true },
                    { headerText: 'In Progress', keyField: 'InProgress', template: '#headerTemplate', allowToggle: true },
                    { headerText: 'In Review', keyField: 'Testing', template: '#headerTemplate', allowToggle: true },
                    { headerText: 'Done', keyField: 'Done', template: '#headerTemplate', allowToggle: true }
                ],
                cardSettings: {
                    contentField: 'summary',
                    headerField: 'id',
                    template: '#cardTemplate',
                    selectionType: 'Multiple'
                },
                swimlaneSettings: {
                   ");
            WriteLiteral(" keyField: \'assignee\',\n                }\n            });\n\n\n            kanbanObj.appendTo(\'#Kanban\');\n            ShowContent();\n         }\n      \n         function WorkItemListClicked(args)\n         {\n             console.log(args);\n");
            WriteLiteral(@"         }


      

         function CallUrl(url) {
             window.location.href = url;
    }

  
    
   
    function UserRowSelected(args)
    {
        selectedRowData = args.data;
        console.log(args);
    }
    function UserSelected(args)
    {
        selectedChanging.textContent = args.rowData.name;
        CancelAssign();
        ChangeCardOwner(selectedChanging.id, args.rowData.name);
    }
    function InitiliazeGrid()
    {
        console.log(data);


        var treeGridObj = new ej.treegrid.TreeGrid({
            dataSource: data,
            allowSelection: true,
            allowFiltering: true,
            allowSorting: true,
            toolbar: ['Search'],
            recordDoubleClick: EditWorkItem,
            enableVirtualization: true,
            filterSettings: { type: 'Menu' },
            selectionSettings: { persistSelection: true, type: ""Multiple"" },
            enableHover: false,
            allowPaging: true,
            pageSettings: { pageSize: 20 },
            ");
            WriteLiteral(@"columns: [
                { type: ""checkbox"", field: """", allowFiltering: false, allowSorting: false, width: '60' },
                { field: 'workItemType.TypeName', headerText: 'Type', width: 60 },
                { field: 'title', headerText: 'Title', width: 125 },
                { field: 'description', headerText: 'Description', width: 180 },
                { field: 'assignedAccountNavigation.Email', headerText: 'AssignedTo', width: 110 },
            ]
        });

        treeGridObj.appendTo('#TreeGrid');


    }

    function ShowLoader()
    {
        $(""#spinner"").show();
        $(""#Content"").hide();
    }
    function ShowContent()
    {
        $(""#spinner"").hide();
        $(""#Content"").show();
    }
   

   
</script>


<script id=""headerTemplate"" type=""text/x-jsrender"">
    <div class=""header-template-wrap"">
        <div class=""header-icon e-icons ${keyField}""></div>
        <div class=""header-text"">${headerText}</div>

    </div>
</script>
<script id=""cardTemplate"" type=""text/x-jsrender"">
 ");
            WriteLiteral(@"   <div class='card-template ${priority}' style='content: ""\e511 "";'>
        <div class='card-header e-tooltip-text'>
            <div class=""row"" style=""display:flex;"">
                <div class=""col-2"">
                    <span class=""e-search ${priority}""></span>
                </div>
                <div class=""col-10"" style=""width:100%; text-align:center;"">
                    <span style=""text-align:center;"">${id} ${title}</span>
                </div>
            </div>
        </div>


        <div class='card-template-wrap'>
            <div class=""row"" style=""padding:2%;"">
                <div class='e-text'>${summary}</div>

            </div>
            <div class=""row"" style=""padding:2%;"">
                <div class='Interactice' onclick='ChangeOwner(this)' id='${id}'>${assgignedAccount}</div>
            </div>
            <div class=""row status"" style=""display:flex;padding:2%;"">

                <div class=""col-3"">
                    <span class='status'></span><div class='e-text' style=""");
            WriteLiteral("text-align:left;\">Status:</div>\n                </div>\n                <div class=\"col-9\" style=\"width:100%;\">\n                    <div class=\'Interactice\'>${status}</div>\n                </div>\n            </div>\n\n        </div>\n\n    </div>\n</script>");
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; }
    }
}
#pragma warning restore 1591
