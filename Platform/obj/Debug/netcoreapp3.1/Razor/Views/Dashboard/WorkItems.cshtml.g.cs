<<<<<<< HEAD:Platform/obj/Debug/netcoreapp3.1/Razor/Views/Dashboard/WorkItems.cshtml.g.cs
#pragma checksum "/home/dwarfdevelopment/Projects/GitClones/RokonoControl/Platform/Views/Dashboard/WorkItems.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "97095d8ce563b038dc422cd2e1ea792d218c8266"
=======
#pragma checksum "/home/kristifor/Projects/Webplatforms/RokonoControl/Views/Backlogs/Index.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "b98dd27b7fab0c9e85809aa26a3b867bbdedbac7"
>>>>>>> Applying the recent changes to the database to all views, ensuring that all work item type can be created and manipulated, removing a bug causing WorkItem of type Test and User Story to be saved under the same category upon saving, removing  a bug causing WorkItems to throw invalidate date if date hasn't been assigned by the user for startdate enddate duedate, binding start date end date and due date on load up in WorkItem edit. Removing a bug causing projects to fail on creation, temporarly disabling the git integrations for new projects.:obj/Debug/netcoreapp3.1/Razor/Views/Backlogs/Index.cshtml.g.cs
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Dashboard_WorkItems), @"mvc.1.0.view", @"/Views/Dashboard/WorkItems.cshtml")]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#nullable restore
#line 1 "/home/dwarfdevelopment/Projects/GitClones/RokonoControl/Platform/Views/_ViewImports.cshtml"
using Rokono_Control;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "/home/dwarfdevelopment/Projects/GitClones/RokonoControl/Platform/Views/_ViewImports.cshtml"
using Rokono_Control.Models;

#line default
#line hidden
#nullable disable
<<<<<<< HEAD:Platform/obj/Debug/netcoreapp3.1/Razor/Views/Dashboard/WorkItems.cshtml.g.cs
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"97095d8ce563b038dc422cd2e1ea792d218c8266", @"/Views/Dashboard/WorkItems.cshtml")]
=======
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"b98dd27b7fab0c9e85809aa26a3b867bbdedbac7", @"/Views/Backlogs/Index.cshtml")]
>>>>>>> Applying the recent changes to the database to all views, ensuring that all work item type can be created and manipulated, removing a bug causing WorkItem of type Test and User Story to be saved under the same category upon saving, removing  a bug causing WorkItems to throw invalidate date if date hasn't been assigned by the user for startdate enddate duedate, binding start date end date and due date on load up in WorkItem edit. Removing a bug causing projects to fail on creation, temporarly disabling the git integrations for new projects.:obj/Debug/netcoreapp3.1/Razor/Views/Backlogs/Index.cshtml.g.cs
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"9a3d88b77ca5ff650022e07aede809867a9af767", @"/Views/_ViewImports.cshtml")]
    public class Views_Dashboard_WorkItems : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    {
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_0 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("href", new global::Microsoft.AspNetCore.Html.HtmlString("~/Syncfusion/ej2/material.css"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_1 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("rel", new global::Microsoft.AspNetCore.Html.HtmlString("stylesheet"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_2 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/Syncfusion/ej2/dist/ej2.min.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        #line hidden
        #pragma warning disable 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperExecutionContext __tagHelperExecutionContext;
        #pragma warning restore 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner __tagHelperRunner = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner();
        #pragma warning disable 0169
        private string __tagHelperStringValueBuffer;
        #pragma warning restore 0169
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __backed__tagHelperScopeManager = null;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __tagHelperScopeManager
        {
            get
            {
                if (__backed__tagHelperScopeManager == null)
                {
                    __backed__tagHelperScopeManager = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager(StartTagHelperWritingScope, EndTagHelperWritingScope);
                }
                return __backed__tagHelperScopeManager;
            }
        }
        private global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper;
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
            WriteLiteral("\n");
#nullable restore
#line 2 "/home/dwarfdevelopment/Projects/GitClones/RokonoControl/Platform/Views/Dashboard/WorkItems.cshtml"
  
    ViewData["Title"] = "Backlog";
    Layout = "~/Views/Shared/_LayoutDashboard.cshtml";
    var result = ViewData["ProjectId"] as int?;
    var BoardId = ViewData["BoardId"] as int?;
 

#line default
#line hidden
#nullable disable
            WriteLiteral("\n");
<<<<<<< HEAD:Platform/obj/Debug/netcoreapp3.1/Razor/Views/Dashboard/WorkItems.cshtml.g.cs
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("link", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.SelfClosing, "97095d8ce563b038dc422cd2e1ea792d218c82664591", async() => {
=======
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("link", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.SelfClosing, "b98dd27b7fab0c9e85809aa26a3b867bbdedbac74507", async() => {
>>>>>>> Applying the recent changes to the database to all views, ensuring that all work item type can be created and manipulated, removing a bug causing WorkItem of type Test and User Story to be saved under the same category upon saving, removing  a bug causing WorkItems to throw invalidate date if date hasn't been assigned by the user for startdate enddate duedate, binding start date end date and due date on load up in WorkItem edit. Removing a bug causing projects to fail on creation, temporarly disabling the git integrations for new projects.:obj/Debug/netcoreapp3.1/Razor/Views/Backlogs/Index.cshtml.g.cs
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_0);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_1);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral(@"
<style>
.image {
    height: 55px;
    width: 55px;
    border-radius: 50px;
    box-shadow: inset 0 0 1px #000000, inset 0 0 14px rgba(0, 0, 0, 0.2);
    margin-left: 30%;
    margin-right: 30%;
}
</style>

<!-- end of sidebar element -->
      
<div class=""row"" style=""margin:0px;"">
<div class=""col-md-12"">
  <div class=""main-card mb-3 card"">
        <div class=""card-body"">
<<<<<<< HEAD:Platform/obj/Debug/netcoreapp3.1/Razor/Views/Dashboard/WorkItems.cshtml.g.cs
           <div class=""row"" style=""margin-left:10px;"">
                <div class=""dropdown d-inline-block"">
                    <button type=""button"" aria-haspopup=""true"" aria-expanded=""false"" data-toggle=""dropdown"" class=""mb-2 mr-2 dropdown-toggle btn btn-outline-info"">New Work Item</button>
                    <div tabindex=""-1"" role=""menu"" aria-hidden=""true"" class=""dropdown-menu"">
                        <button type=""button"" tabindex=""0"" class=""dropdown-item"" onclick=""CreateNewWorkItem(5)"">Epic</button>
                        <button type=""button"" tabindex=""0"" class=""dropdown-item"" onclick=""CreateNewWorkItem(2)"">Feature</button>
   ");
            WriteLiteral(@"                     <button type=""button"" tabindex=""0"" class=""dropdown-item"" onclick=""CreateNewWorkItem(7)"">User Story</button>
                        <button type=""button"" tabindex=""0"" class=""dropdown-item"" onclick=""CreateNewWorkItem(3)"">Task</button>
                        <button type=""button"" tabindex=""0"" class=""dropdown-item"" onclick=""CreateNewWorkItem(1)"">Bug</button>
                        <button type=""button"" tabindex=""0"" class=""dropdown-item"" onclick=""CreateNewWorkItem(6)"">Issue</button>
                        <button type=""button"" tabindex=""0"" class=""dropdown-item"" onclick=""CreateNewWorkItem(7)"">Test</button>
                    </div>
                </div>
=======
        <h5 class=""card-title text-center"">Select a project</h5>
          <div class=""row"" style=""margin-left:10px;"">

                 <div class=""btn-group dropdown-split-primary"">
                    <button type=""button"" class=""btn btn-primary"" onclick=""CreateNewWorkItem(5)""""><i class=""icofont icofont-user-alt-3""></i>Add New Epic</button>
                    <button type=""button"" class=""btn btn-primary dropdown-toggle dropdown-toggle-split waves-effect waves-light"" data-toggle=""dropdown"" aria-haspopup=""true"" aria-expanded=""false"">
                        <span class=""sr-only"">Add Work Item</span>
                    </button>
                    <div class=""dropdown-menu"">                     
                        <a class=""dropdown-item waves-effect waves-light"" href=""#"" onclick=""CreateNewWorkItem(2)"">Feature</a>
                        <a class=""dropdown-item waves-eff");
            WriteLiteral(@"ect waves-light"" href=""#"" onclick=""CreateNewWorkItem(7)"">User Story</a>
                        <a class=""dropdown-item waves-effect waves-light"" href=""#"" onclick=""CreateNewWorkItem(3)"">Task</a>
                        <a class=""dropdown-item waves-effect waves-light"" href=""#"" onclick=""CreateNewWorkItem(1)"">Bug</a>
                        <a class=""dropdown-item waves-effect waves-light"" href=""#"" onclick=""CreateNewWorkItem(6)"">Issue</a>
                        <a class=""dropdown-item waves-effect waves-light"" href=""#"" onclick=""CreateNewWorkItem(7)"">Test</a>
                    </div>
                </div>

                <button class=""btn btn-primary btn-outline-primary""><i class=""icofont icofont-user-alt-3""></i>Open In Query</button>
                <button class=""btn btn-primary btn-outline-primary""><i class=""icofont icofont-user-alt-3""></i>Import Work Items</button>
                <button class=""btn btn-primary btn-outline-primary""><i class=""icofont icofont-user-alt-3""></i>Export Work Items</button>
  ");
            WriteLiteral(@"              <button class=""btn btn-primary btn-outline-primary""><i class=""icofont icofont-user-alt-3""></i>Recycle Work Items</button>



                
>>>>>>> Applying the recent changes to the database to all views, ensuring that all work item type can be created and manipulated, removing a bug causing WorkItem of type Test and User Story to be saved under the same category upon saving, removing  a bug causing WorkItems to throw invalidate date if date hasn't been assigned by the user for startdate enddate duedate, binding start date end date and due date on load up in WorkItem edit. Removing a bug causing projects to fail on creation, temporarly disabling the git integrations for new projects.:obj/Debug/netcoreapp3.1/Razor/Views/Backlogs/Index.cshtml.g.cs
            </div>
           <div class=""control-section"">
                <div class=""content-wrapper"">
                    <div id=""TreeGrid"" style=""height:80vh;""></div>
                </div>
            </div>
        </div>
    </div>
</div>
</div>
 
<script src=""https://code.jquery.com/jquery-3.4.1.slim.min.js"" integrity=""sha384-J6q");
            WriteLiteral(@"a4849blE2+poT4WnyKhv5vZF5SrPo0iEjwBvKU7imGFAV0wwj1yYfoRSJoZ+n"" crossorigin=""anonymous""></script>
<script src=""https://cdn.jsdelivr.net/npm/popper.js@1.16.0/dist/umd/popper.min.js"" integrity=""sha384-Q6E9RHvbIyZFJoft+2mJbHaEWldlvI9IOYy5n3zV9zzTtmI3UksdQRVvoxMfooAo"" crossorigin=""anonymous""></script>
<script src=""https://stackpath.bootstrapcdn.com/bootstrap/4.4.1/js/bootstrap.min.js"" integrity=""sha384-wfSDF2E50Y2D1uUdj0O3uMBJnjuUD4Ih7YwaYd1iqfktj0Uod8GCExl3Og8ifwB6"" crossorigin=""anonymous""></script>
 
 ");
<<<<<<< HEAD:Platform/obj/Debug/netcoreapp3.1/Razor/Views/Dashboard/WorkItems.cshtml.g.cs
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "97095d8ce563b038dc422cd2e1ea792d218c82668417", async() => {
=======
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "b98dd27b7fab0c9e85809aa26a3b867bbdedbac78367", async() => {
>>>>>>> Applying the recent changes to the database to all views, ensuring that all work item type can be created and manipulated, removing a bug causing WorkItem of type Test and User Story to be saved under the same category upon saving, removing  a bug causing WorkItems to throw invalidate date if date hasn't been assigned by the user for startdate enddate duedate, binding start date end date and due date on load up in WorkItem edit. Removing a bug causing projects to fail on creation, temporarly disabling the git integrations for new projects.:obj/Debug/netcoreapp3.1/Razor/Views/Backlogs/Index.cshtml.g.cs
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_2);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\n<script id=\"template\" type=\"text/x-template\">\n    <div class=\"image\">\n        <i class=\"${workItemIcon}\" style=\"padding: 10px;font-size: xx-large;color: cadetblue;\"></i>\n \n    </div>\n</script>\n <script>\n     var ProjectId = ");
#nullable restore
<<<<<<< HEAD:Platform/obj/Debug/netcoreapp3.1/Razor/Views/Dashboard/WorkItems.cshtml.g.cs
#line 63 "/home/dwarfdevelopment/Projects/GitClones/RokonoControl/Platform/Views/Dashboard/WorkItems.cshtml"
=======
#line 59 "/home/kristifor/Projects/Webplatforms/RokonoControl/Views/Backlogs/Index.cshtml"
>>>>>>> Applying the recent changes to the database to all views, ensuring that all work item type can be created and manipulated, removing a bug causing WorkItem of type Test and User Story to be saved under the same category upon saving, removing  a bug causing WorkItems to throw invalidate date if date hasn't been assigned by the user for startdate enddate duedate, binding start date end date and due date on load up in WorkItem edit. Removing a bug causing projects to fail on creation, temporarly disabling the git integrations for new projects.:obj/Debug/netcoreapp3.1/Razor/Views/Backlogs/Index.cshtml.g.cs
                Write(result);

#line default
#line hidden
#nullable disable
            WriteLiteral(";\n    function OpenWorkItem(id)\n    {\n        console.log(id);\n    }\n    $( document ).ready(function() \n    {\n        var id = ");
#nullable restore
<<<<<<< HEAD:Platform/obj/Debug/netcoreapp3.1/Razor/Views/Dashboard/WorkItems.cshtml.g.cs
#line 70 "/home/dwarfdevelopment/Projects/GitClones/RokonoControl/Platform/Views/Dashboard/WorkItems.cshtml"
=======
#line 66 "/home/kristifor/Projects/Webplatforms/RokonoControl/Views/Backlogs/Index.cshtml"
>>>>>>> Applying the recent changes to the database to all views, ensuring that all work item type can be created and manipulated, removing a bug causing WorkItem of type Test and User Story to be saved under the same category upon saving, removing  a bug causing WorkItems to throw invalidate date if date hasn't been assigned by the user for startdate enddate duedate, binding start date end date and due date on load up in WorkItem edit. Removing a bug causing projects to fail on creation, temporarly disabling the git integrations for new projects.:obj/Debug/netcoreapp3.1/Razor/Views/Backlogs/Index.cshtml.g.cs
            Write(result);

#line default
#line hidden
#nullable disable
            WriteLiteral(@";
        
          var dto = {
            ""id"": id,
            ""WorkItemType"":5
        }
        console.log(dto);
        $.ajax({
            type: 'POST',
            url: '/Backlogs/GetWorkItems',
            data: JSON.stringify(dto),
            contentType: ""application/json; charset=utf-8"",
            dataType: ""json"",
            success: function (response) {
                InitiliazeGrid(response);
            },
            error: function (xhr, status, error) {
                console.log(error);
            }
        });
        
    });
    function InitiliazeGrid(data )
    {
        console.log(data);
        var grid = new ej.grids.Grid({
        dataSource: data,
        recordDoubleClick: recordDoubleClick,

        columns: [
                {
                    headerText: 'Icon', textAlign: 'Center',
                    template: '#template', width: 150
                },
                { field: 'WorkItemType.TypeName', headerText: 'Type Name', width: 125 },
                { f");
            WriteLiteral(@"ield: 'title', headerText: 'Title', width: 125 },
                { field: 'description', headerText: 'Description', width: 180 },
                { field: 'assignedAccountNavigation.Email', headerText: 'AssignedTo', width: 110 },
            ]
        });
        grid.appendTo('#TreeGrid');
 
    }
    function CreateNewWorkItem(id){
        ProjectId = ");
#nullable restore
<<<<<<< HEAD:Platform/obj/Debug/netcoreapp3.1/Razor/Views/Dashboard/WorkItems.cshtml.g.cs
#line 114 "/home/dwarfdevelopment/Projects/GitClones/RokonoControl/Platform/Views/Dashboard/WorkItems.cshtml"
=======
#line 120 "/home/kristifor/Projects/Webplatforms/RokonoControl/Views/Backlogs/Index.cshtml"
>>>>>>> Applying the recent changes to the database to all views, ensuring that all work item type can be created and manipulated, removing a bug causing WorkItem of type Test and User Story to be saved under the same category upon saving, removing  a bug causing WorkItems to throw invalidate date if date hasn't been assigned by the user for startdate enddate duedate, binding start date end date and due date on load up in WorkItem edit. Removing a bug causing projects to fail on creation, temporarly disabling the git integrations for new projects.:obj/Debug/netcoreapp3.1/Razor/Views/Backlogs/Index.cshtml.g.cs
               Write(result);

#line default
#line hidden
#nullable disable
            WriteLiteral(";\n        boardId = ");
#nullable restore
<<<<<<< HEAD:Platform/obj/Debug/netcoreapp3.1/Razor/Views/Dashboard/WorkItems.cshtml.g.cs
#line 115 "/home/dwarfdevelopment/Projects/GitClones/RokonoControl/Platform/Views/Dashboard/WorkItems.cshtml"
=======
#line 121 "/home/kristifor/Projects/Webplatforms/RokonoControl/Views/Backlogs/Index.cshtml"
>>>>>>> Applying the recent changes to the database to all views, ensuring that all work item type can be created and manipulated, removing a bug causing WorkItem of type Test and User Story to be saved under the same category upon saving, removing  a bug causing WorkItems to throw invalidate date if date hasn't been assigned by the user for startdate enddate duedate, binding start date end date and due date on load up in WorkItem edit. Removing a bug causing projects to fail on creation, temporarly disabling the git integrations for new projects.:obj/Debug/netcoreapp3.1/Razor/Views/Backlogs/Index.cshtml.g.cs
             Write(BoardId);

#line default
#line hidden
#nullable disable
            WriteLiteral(@";
        window.location.href = ""/Dashboard/AddNewWorkItem?projectId=""+ProjectId+""&workItemType=""+id+""&parentId=0&returnUrl=""+window.location.href;
    }
    function WorkItemSelected(args){
        console.log(args);
    }
    function load(args) {
        this.parentDetails.parentKeyFieldValue = this.parentDetails.parentRowData['id'];
    }

    function recordDoubleClick(args)
    {
        console.log(args);
 //       args.rowData.id
        window.location.href = ""/Dashboard/EditWorkItem?projectId=");
#nullable restore
#line 129 "/home/dwarfdevelopment/Projects/GitClones/RokonoControl/Platform/Views/Dashboard/WorkItems.cshtml"
                                                             Write(result);

#line default
#line hidden
#nullable disable
            WriteLiteral("&&workItem=\"+args.rowData.id+\"&returnUrl=\"+window.location.href;\n    }\n </script>\n\n\n");
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; }
    }
}
#pragma warning restore 1591
