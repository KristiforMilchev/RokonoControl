#pragma checksum "/home/dwarfdevelopment/Projects/GitClones/RC/RokonoControl/Platform/Views/Shared/Components/Documentation/DocumentationNavigation/Default.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "27021ec10f2ac8ae1cfe0ca7574c3205223ef435"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Shared_Components_Documentation_DocumentationNavigation_Default), @"mvc.1.0.view", @"/Views/Shared/Components/Documentation/DocumentationNavigation/Default.cshtml")]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#nullable restore
#line 1 "/home/dwarfdevelopment/Projects/GitClones/RC/RokonoControl/Platform/Views/_ViewImports.cshtml"
using Rokono_Control;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "/home/dwarfdevelopment/Projects/GitClones/RC/RokonoControl/Platform/Views/_ViewImports.cshtml"
using Rokono_Control.Models;

#line default
#line hidden
#nullable disable
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"27021ec10f2ac8ae1cfe0ca7574c3205223ef435", @"/Views/Shared/Components/Documentation/DocumentationNavigation/Default.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"9a3d88b77ca5ff650022e07aede809867a9af767", @"/Views/_ViewImports.cshtml")]
    public class Views_Shared_Components_Documentation_DocumentationNavigation_Default : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    {
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
#nullable restore
#line 1 "/home/dwarfdevelopment/Projects/GitClones/RC/RokonoControl/Platform/Views/Shared/Components/Documentation/DocumentationNavigation/Default.cshtml"
  
    var ProjectId = ViewData["ProjectId"] as int?;
    var defaultIteration = ViewData["DefaultIteration"] as int?;
    var CurrentUser = ViewData["User"];
    var UserRights = ViewData["UserRights"]as UserRights;


#line default
#line hidden
#nullable disable
            WriteLiteral(@"
<style>
    
    .DocumentationRemoveIcon:before{
        content:'\e7fc';
        font-family: e-icons;
        padding:3px;
        font-size: 13px;
    }
    .ChatChannelIcon:before{
        content:'\e99a';
        font-family: e-icons;
        padding:3px;
        font-size: 13px;
    }
    .TreeNewItem:before{
        padding:3px;
        content:'\e7f9';
        font-family: e-icons;
        font-size: 13px;
    }
    .CategoryIcon:before{
        padding:3px;
        content:'\e714';
        font-family: e-icons;
        font-size: 13px;
    }
    .CategoryIcon:hover{
        color:rgb(230, 50, 111);
    }
    .TreeNewItem:hover{
        color:rgb(230, 50, 111);
    }
    .DocumentationRemoveIcon:hover{
        color:rgb(230, 50, 111);
        cursor: pointer;
    }
    .ChatChannelIcon:hover{
        color:rgb(230, 50, 111);
        
    }
    #documentation-treeview .e-list-parent .e-ul
    {
        padding: 0;
        margin:  0;
    } 
    #documentation-treeview .e-text-content
    {
        pa");
            WriteLiteral(@"dding: 0;
    }

    #documentation-treeview  .e-text-content
    {
        text-align: initial;
    }
    #documentation-treeview .e-list-text
    {
        width: 80%;
    }
    #documentation-treeview  .e-gridheader
    {
        height:0px;
        display: none;
    }

    #documentation-treeview .e-treecell
    {
        width: 100%;
    }
    .nodetext{
        font-family: ""Helvetica Neue"",Helvetica,Arial,sans-serif;
        padding: 2%;
        font-size: 16px;
        text-align: left;
        padding-left: 5px;
        cursor: pointer;
    }
    .nodetext:hover{
        background-color: #fff;
        border-color: #000;
        box-shadow: 0 4px 8px 0 rgba(0, 0, 0, 0.22);
    }
    .nodetextHeading{
        cursor: pointer;
    }
     .nodetextHeading:hover{
        background-color: #fff;
        border-color: #000;
        box-shadow: 0 4px 8px 0 rgba(0, 0, 0, 0.22);
    }
    .nodetextHeading
    {
        font-family: ""Helvetica Neue"",Helvetica,Arial,sans-serif;
        padding: 2%;
        fo");
            WriteLiteral("nt-size: 18px;\n        text-align: left;\n    }\n    .e-icons .e-treegridexpand\n    {\n        display: block;\n    }\n\n</style>\n<div class=\"row\" style=\"margin:0;\">\n    <div id=\"DocumentationTreeViewHolder\">\n");
            WriteLiteral("                <div id=\"documentation-treeview\"></div>\n    </div>\n</div>\n\n\n");
#nullable restore
#line 120 "/home/dwarfdevelopment/Projects/GitClones/RC/RokonoControl/Platform/Views/Shared/Components/Documentation/DocumentationNavigation/Default.cshtml"
 if(UserRights.Documentation == 1)
{

#line default
#line hidden
#nullable disable
            WriteLiteral(@"    <script id=""DocumentationGridRow"" type=""text/x-template"" >
        <tr id=""ChatChannelRow_${isParent}_${internalId}"" >
            <td>
            ${if(isParent)}
                <div class=""nodetextHeading"" id=""rowCat_${internalId}""  onclick=""Expand(${internalId})"">
                    <div class=""row"" style=""padding:5px; margin:0;"" >
                        <div class=""col-md-9"">
                            <span class=""CategoryIcon""></span><span class=""ChatTreeMainText"">${nodeText}</span>
                        </div>
                        <div class=""col-md-2"" style=""display: contents;"">
                            <span onclick=""AddNewCategoryField(2,${internalId})"" class=""TreeNewItem""></span>
                            <span onclick=""DeleteDocCategory(${internalId})"" class=""DocumentationRemoveIcon""></span>

                        </div>
                    </div>
                </div>   
            ${else}
                <div class=""nodetext"" id=""ChatChannel_${internalId}"" onclick=""OpenChan");
            WriteLiteral(@"nel(${internalId})"">
                    <div class=""row"">
                        <div class=""col-md-9"">
                            <span class=""ChatChannelIcon"" style=""padding-left:20px;""></span> <span class=""ChatTreeMainText"" >${nodeText}</span>
                        </div>
                        <div class=""col-md-2""   >
                            <span onclick=""DeleteCategoryField(${internalId})"" class=""DocumentationRemoveIcon""></span>
                        </div>
                    </div>
                </div>
            ${/if}
            </td>
        </tr>
    </script>
");
#nullable restore
#line 153 "/home/dwarfdevelopment/Projects/GitClones/RC/RokonoControl/Platform/Views/Shared/Components/Documentation/DocumentationNavigation/Default.cshtml"
}
else
{

#line default
#line hidden
#nullable disable
            WriteLiteral(@"    <script id=""DocumentationGridRow"" type=""text/x-template"" >
        <tr id=""ChatChannelRow_${isParent}_${internalId}"" >
            <td>
            ${if(isParent)}
                <div class=""nodetextHeading""  onclick=""Expand(${internalId})"">
                    <div class=""row"" style=""padding:5px; margin:0;"" >
                        <div class=""col-md-12"">
                            <span class=""CategoryIcon""></span><span class=""ChatTreeMainText"">${nodeText}</span>
                        </div>
                    </div>
                </div>   
            ${else}
                <div class=""nodetext"" id=""ChatChannel_${internalId}"" onclick=""OpenChannel(${internalId})"">
                    <span class=""ChatChannelIcon"" style=""padding-left:20px;""></span> <span class=""ChatTreeMainText"" >${nodeText}</span>
                </div>
            ${/if}
            </td>
        </tr>
    </script>
");
#nullable restore
#line 175 "/home/dwarfdevelopment/Projects/GitClones/RC/RokonoControl/Platform/Views/Shared/Components/Documentation/DocumentationNavigation/Default.cshtml"
}

#line default
#line hidden
#nullable disable
            WriteLiteral("\n<script>\nvar LastDataSource;\nvar DocumentationNavigation;\n$( document ).ready(function() {\n    var dtoNotifications = {\n        \"ProjectId\": ");
#nullable restore
#line 182 "/home/dwarfdevelopment/Projects/GitClones/RC/RokonoControl/Platform/Views/Shared/Components/Documentation/DocumentationNavigation/Default.cshtml"
                Write(ProjectId);

#line default
#line hidden
#nullable disable
            WriteLiteral(@",
         
    }
    $.ajax({
        type: 'POST',
        url: '/Documentation/GetNavigation',
        data: JSON.stringify(dtoNotifications),
        contentType: ""application/json; charset=utf-8"",
        dataType: ""json"",
        success: function (response) {
            InitializeChatItems(response);
        },
        error: function (xhr, status, error) {
            console.log(error);
        }
    }); 
});
 
    function DeleteCategoryField(id)
    {
        console.log(id);
        $(""#ChatChannelRow_undefined_""+id).hide();
        var dto = 
        {
            ""Id"":id
        }   
        $.ajax({
            type: 'POST',
            url: '/Documentation/DeleteCategoryField',
            data: JSON.stringify(dto),
            contentType: ""application/json; charset=utf-8"",
            dataType: ""json"",
            success: function (response) {

            },
            error: function (xhr, status, error) {
                console.log(error);
            }
        }); 
    }

    functio");
            WriteLiteral(@"n DeleteDocCategory(id)
    {
        Expand(id);
        $(""#ChatChannelRow_true_""+id).hide();
        var dto = 
        {
            ""Id"":id
        }   
        $.ajax({
            type: 'POST',
            url: '/Documentation/DeleteCategory',
            data: JSON.stringify(dto),
            contentType: ""application/json; charset=utf-8"",
            dataType: ""json"",
            success: function (response) {

            },
            error: function (xhr, status, error) {
                console.log(error);
            }
        }); 
    }
    var URL = location.href.replace(location.search, '');
    
     
    function InitializeChatItems(incomingData)
    {
        $(""#DocumentationTreeViewHolder"").html("""");
        $(""#DocumentationTreeViewHolder"").html(""<div id=\""documentation-treeview\""></div>"");
 
        console.log(incomingData);
        LastDataSource = incomingData;
        DocumentationNavigation = new ej.treegrid.TreeGrid({
            dataSource: incomingData,
            childMappin");
            WriteLiteral(@"g: 'nodeChild',
            treeColumnIndex: 0,
            rowSelected :Expand,
            rowTemplate:'#DocumentationGridRow',
            allowPaging: false,
            rowHeight: 83,
            columns: [
                { field: 'nodeText',  width: 220 },
              
            ]
        });
        DocumentationNavigation.appendTo('#documentation-treeview');
    }
     
    function OpenChannel(id)
    {
        $(""#BreadCrumbHolder"").html("""");
        $(""#DocumentationPageControl"").html("""");
        $(""#DocumentationPageControl"").load('/Documentation/DocumentationPage?id='+id+'&&projectId=");
#nullable restore
#line 275 "/home/dwarfdevelopment/Projects/GitClones/RC/RokonoControl/Platform/Views/Shared/Components/Documentation/DocumentationNavigation/Default.cshtml"
                                                                                              Write(ProjectId);

#line default
#line hidden
#nullable disable
            WriteLiteral("\');\n        $(\"#BreadCrumbHolder\").load(\"/Documentation/GetBreadcrum?id=\"+id+\"&&projectId=");
#nullable restore
#line 276 "/home/dwarfdevelopment/Projects/GitClones/RC/RokonoControl/Platform/Views/Shared/Components/Documentation/DocumentationNavigation/Default.cshtml"
                                                                                 Write(ProjectId);

#line default
#line hidden
#nullable disable
            WriteLiteral(@""");

        
    }
    function Expand(args)
    {
        LastDataSource.forEach(x=>{
            var expand =false;
            if(x.internalId === args && x.isExpand === 1)
            {
                x.isExpand = 0;
                expand = false;
            }
            else
            {
                x.isExpand = 1;
                expand = true;
            }
            
            x.nodeChild.forEach(y=>{
                if(y.parentId === args)
                {
                    if(expand)
                    {
                        
                        $(""#ChatChannelRow_undefined_""+y.internalId).show();
                    }
                    else
                    {
                      
                        $(""#ChatChannelRow_undefined_""+y.internalId).hide();
                    }
                }
           });
        });
");
            WriteLiteral("    }\n</script>");
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; }
    }
}
#pragma warning restore 1591
