#pragma checksum "/home/dwarfdevelopment/Projects/GitClones/RC/RokonoControl/Platform/Views/Shared/Components/Documentation/DocumentationPageHandler/Default.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "b406b94210c5d613228db4195fdba103e0f1688c"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Shared_Components_Documentation_DocumentationPageHandler_Default), @"mvc.1.0.view", @"/Views/Shared/Components/Documentation/DocumentationPageHandler/Default.cshtml")]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#nullable restore
#line 1 "/home/dwarfdevelopment/Projects/GitClones/RC/RokonoControl/Platform/Views/_ViewImports.cshtml"
using Rokono_Control;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "/home/dwarfdevelopment/Projects/GitClones/RC/RokonoControl/Platform/Views/_ViewImports.cshtml"
using Rokono_Control.Models;

#line default
#line hidden
#nullable disable
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"b406b94210c5d613228db4195fdba103e0f1688c", @"/Views/Shared/Components/Documentation/DocumentationPageHandler/Default.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"9a3d88b77ca5ff650022e07aede809867a9af767", @"/Views/_ViewImports.cshtml")]
    public class Views_Shared_Components_Documentation_DocumentationPageHandler_Default : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    {
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
#nullable restore
#line 1 "/home/dwarfdevelopment/Projects/GitClones/RC/RokonoControl/Platform/Views/Shared/Components/Documentation/DocumentationPageHandler/Default.cshtml"
  
    var CategoryFieldId = ViewData["CategoryField"] as int?;
    var PageData = ViewData["PageData"] as AssociatedDocumentationCategoryPage;
    var ModalType = ViewData["Modal"]  as int?;

#line default
#line hidden
#nullable disable
            WriteLiteral(@"

<style>
   
    #SaveDocumentationPage_title{
        text-align: center;
        width: 100%;
    }
    .e-upload {
        width: 100%;
        position: relative;
        margin-top: 15px;
        float: none;
    }
    .e-upload .e-upload-actions {
        float: none;
        text-align: right;
    }
    .control_wrapper .e-upload .e-upload-drag-hover {
        margin: 0;
    }
</style>

<div id=""SaveDocumentationPage""  >
    <div class=""container-fluid"">
        <div class=""row"">
            <input id=""InputPageDataTitle"" />
        </div>
         <div class=""row"">
            <div class=""control_wrapper"">
                <!-- Initialize Uploader -->
                <input type='file' id='fileupload' name='UploadFiles'/>
            </div>
        </div>
        <div class=""row"">
            <div style=""min-height: 51vh;"" id=""InputPageData"" class=""form-control""></div>
        </div>
        <div class=""row InlineFlex"">
            <button class=""btn btn-primary e-control e-btn e-lib e-outline e-prima");
            WriteLiteral(@"ry"" style=""width: 50%;"" onclick=""SubmitDocumentationPage()"">Submit</button>
            <button class=""btn btn-primary e-control e-btn e-lib e-outline e-primary"" style=""width: 50%;"" onclick=""CloseDocumentationPage()"">Cancel</button>
        </div>
    </div>

</div>

<script>
var Modal = """);
#nullable restore
#line 52 "/home/dwarfdevelopment/Projects/GitClones/RC/RokonoControl/Platform/Views/Shared/Components/Documentation/DocumentationPageHandler/Default.cshtml"
        Write(ModalType);

#line default
#line hidden
#nullable disable
            WriteLiteral("\";\nvar activeFiles = [];\nvar InputPageData;\nvar InputPageDataTitle = new ej.inputs.TextBox({\n    placeholder: \'The title of the current page item\',\n    floatLabelType: \'Auto\',\n});\n");
#nullable restore
#line 59 "/home/dwarfdevelopment/Projects/GitClones/RC/RokonoControl/Platform/Views/Shared/Components/Documentation/DocumentationPageHandler/Default.cshtml"
 if(PageData != null)
{

#line default
#line hidden
#nullable disable
            WriteLiteral("  ");
            WriteLiteral("  InputPageDataTitle.value = ");
#nullable restore
#line 61 "/home/dwarfdevelopment/Projects/GitClones/RC/RokonoControl/Platform/Views/Shared/Components/Documentation/DocumentationPageHandler/Default.cshtml"
                            Write(PageData.Title);

#line default
#line hidden
#nullable disable
            WriteLiteral("\n");
#nullable restore
#line 62 "/home/dwarfdevelopment/Projects/GitClones/RC/RokonoControl/Platform/Views/Shared/Components/Documentation/DocumentationPageHandler/Default.cshtml"
}

#line default
#line hidden
#nullable disable
            WriteLiteral("InputPageDataTitle.appendTo(\'#InputPageDataTitle\');\n");
#nullable restore
#line 64 "/home/dwarfdevelopment/Projects/GitClones/RC/RokonoControl/Platform/Views/Shared/Components/Documentation/DocumentationPageHandler/Default.cshtml"
 if(PageData != null)
{

#line default
#line hidden
#nullable disable
            WriteLiteral("    InputPageData = new Quill(\'#InputPageData\', {\n");
            WriteLiteral("            theme: \'snow\',\n");
            WriteLiteral("            value : ");
#nullable restore
#line 68 "/home/dwarfdevelopment/Projects/GitClones/RC/RokonoControl/Platform/Views/Shared/Components/Documentation/DocumentationPageHandler/Default.cshtml"
                 Write(PageData.Content);

#line default
#line hidden
#nullable disable
            WriteLiteral("\n");
            WriteLiteral("    });\n");
#nullable restore
#line 70 "/home/dwarfdevelopment/Projects/GitClones/RC/RokonoControl/Platform/Views/Shared/Components/Documentation/DocumentationPageHandler/Default.cshtml"
}

#line default
#line hidden
#nullable disable
            WriteLiteral("\n");
#nullable restore
#line 72 "/home/dwarfdevelopment/Projects/GitClones/RC/RokonoControl/Platform/Views/Shared/Components/Documentation/DocumentationPageHandler/Default.cshtml"
 if(PageData == null)
{

#line default
#line hidden
#nullable disable
            WriteLiteral("    InputPageData = new Quill(\'#InputPageData\', {\n");
            WriteLiteral("            theme: \'snow\',\n");
            WriteLiteral("    });\n");
#nullable restore
#line 77 "/home/dwarfdevelopment/Projects/GitClones/RC/RokonoControl/Platform/Views/Shared/Components/Documentation/DocumentationPageHandler/Default.cshtml"
}

#line default
#line hidden
#nullable disable
            WriteLiteral(@"

var method;
 
var SaveDocumentationPageModal;
SaveDocumentationPageModal = new ej.popups.Dialog({
    width: '100%',
    height: '100%',
    header: 'Enter the page details',
    isModal: true,
    animationSettings: { effect: 'None' },
    visible: false
});
SaveDocumentationPageModal.appendTo('#SaveDocumentationPage');
SaveDocumentationPageModal.show();
var dropElement = document.getElementsByClassName('control-fluid')[0];

var uploadObj = new ej.inputs.Uploader({
    asyncSettings: {
        saveUrl: '/Uploader/Save',
        removeUrl: '/Uploader/Remove',

    },
    removing: onFileRemove,
    dropArea: dropElement,
    selected: ItemSelected

});
uploadObj.appendTo('#fileupload');
function ItemSelected(args) {
    console.log(args);
    selectedImage = window.location.origin+""/Files/Uploads/""+args.filesData[0].rawFile.name;
    var length = InputPageData.getLength();
    console.log(length);
    activeFiles.push({
        ""FileName"":args.filesData[0].rawFile.name,
        ""Line"" : length+1
    });
   ");
            WriteLiteral(@" InputPageData.insertEmbed(length+1, 'image', selectedImage);

}
var Delta;

function onFileRemove(args) {
    console.log(args);
    args.postRawFile = false;
}

 
function CloseDocumentationPage()
{
    SaveDocumentationPageModal.hide();

}

function SubmitDocumentationPage()
{
    var method;
    var messagesDto = {
        ""Id"" : 0,
        ""Title"" : $(""#InputPageDataTitle"").val(),
        ""CategoryField"" : ");
#nullable restore
#line 139 "/home/dwarfdevelopment/Projects/GitClones/RC/RokonoControl/Platform/Views/Shared/Components/Documentation/DocumentationPageHandler/Default.cshtml"
                     Write(CategoryFieldId);

#line default
#line hidden
#nullable disable
            WriteLiteral(",\n        \"Content\" :  $(\"#InputPageData\").children()[0].innerHTML\n    }\n");
#nullable restore
#line 142 "/home/dwarfdevelopment/Projects/GitClones/RC/RokonoControl/Platform/Views/Shared/Components/Documentation/DocumentationPageHandler/Default.cshtml"
     if(PageData == null)
    {

#line default
#line hidden
#nullable disable
            WriteLiteral("    ");
            WriteLiteral("    method = \"AddNewPage\";\n");
#nullable restore
#line 145 "/home/dwarfdevelopment/Projects/GitClones/RC/RokonoControl/Platform/Views/Shared/Components/Documentation/DocumentationPageHandler/Default.cshtml"
    }

#line default
#line hidden
#nullable disable
#nullable restore
#line 146 "/home/dwarfdevelopment/Projects/GitClones/RC/RokonoControl/Platform/Views/Shared/Components/Documentation/DocumentationPageHandler/Default.cshtml"
     if(PageData != null)
    {

#line default
#line hidden
#nullable disable
            WriteLiteral("    ");
            WriteLiteral("   messagesDto.Id = ");
#nullable restore
#line 148 "/home/dwarfdevelopment/Projects/GitClones/RC/RokonoControl/Platform/Views/Shared/Components/Documentation/DocumentationPageHandler/Default.cshtml"
                     Write(PageData.Id);

#line default
#line hidden
#nullable disable
            WriteLiteral(";\n    ");
            WriteLiteral("   method = \"EditPage\";\n");
#nullable restore
#line 150 "/home/dwarfdevelopment/Projects/GitClones/RC/RokonoControl/Platform/Views/Shared/Components/Documentation/DocumentationPageHandler/Default.cshtml"
    }

#line default
#line hidden
#nullable disable
            WriteLiteral(@"    
    console.log(messagesDto);
    console.log($(""#InputPageDataTitle"").val());
    if($(""#InputPageDataTitle"").val())
    {

        $.ajax({
                type: 'POST',
                url: '/Documentation/'+method,
                data: JSON.stringify(messagesDto),
                contentType: ""application/json; charset=utf-8"",
                dataType: ""json"",
                
                success: function (response) {
//                    CloseNewCategoryModal();
                },
                error: function (xhr, status, error) {
                    console.log(error);
                }
        });
    }
    else
        ShowAlert(""Input field Title Name must contain a value!!!"");
}
 
</script>");
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; }
    }
}
#pragma warning restore 1591
