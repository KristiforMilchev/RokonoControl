#pragma checksum "/home/dwarfdevelopment/Projects/GitClones/RokonoControl/Platform/Views/Shared/Components/OutboundDetailsSettings/BugReportFormSettings/Default.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "9efb9c2f4070af00a56178e258fc97f22f61baf7"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Shared_Components_OutboundDetailsSettings_BugReportFormSettings_Default), @"mvc.1.0.view", @"/Views/Shared/Components/OutboundDetailsSettings/BugReportFormSettings/Default.cshtml")]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#nullable restore
#line 1 "/home/dwarfdevelopment/Projects/GitClones/RokonoControl/Platform/Views/_ViewImports.cshtml"
using Rokono_Control;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "/home/dwarfdevelopment/Projects/GitClones/RokonoControl/Platform/Views/_ViewImports.cshtml"
using Rokono_Control.Models;

#line default
#line hidden
#nullable disable
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"9efb9c2f4070af00a56178e258fc97f22f61baf7", @"/Views/Shared/Components/OutboundDetailsSettings/BugReportFormSettings/Default.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"9a3d88b77ca5ff650022e07aede809867a9af767", @"/Views/_ViewImports.cshtml")]
    public class Views_Shared_Components_OutboundDetailsSettings_BugReportFormSettings_Default : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    {
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_0 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/Files/Uploads/tvc_f4b7854e16de4fd5f7702124201b3db7.png"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_1 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("style", new global::Microsoft.AspNetCore.Html.HtmlString("width: -moz-available;"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        #line hidden
        #pragma warning disable 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperExecutionContext __tagHelperExecutionContext;
        #pragma warning restore 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner __tagHelperRunner = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner();
        #pragma warning disable 0169
        private string __tagHelperStringValueBuffer;
        #pragma warning restore 0169
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __backed__tagHelperScopeManager = null;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __tagHelperScopeManager
        {
            get
            {
                if (__backed__tagHelperScopeManager == null)
                {
                    __backed__tagHelperScopeManager = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager(StartTagHelperWritingScope, EndTagHelperWritingScope);
                }
                return __backed__tagHelperScopeManager;
            }
        }
        private global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper;
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
#nullable restore
#line 1 "/home/dwarfdevelopment/Projects/GitClones/RokonoControl/Platform/Views/Shared/Components/OutboundDetailsSettings/BugReportFormSettings/Default.cshtml"
  
    var KeySettings = ViewData["ProjectKey"] as AssociatedProjectApiKeys;
    var ProjectId = ViewData["ProjectId"] as int?;
    var value = ViewData["RuleValueBugReport"] as int?;

#line default
#line hidden
#nullable disable
            WriteLiteral(@"<style>
    .e-input-picture:before {
        content: '\e30d';
        font-family: e-icons;
    }
    
    .e-input-calendar:before {
        content:'\e901';
        font-family: e-icons;
        font-size: 13px;
    }
    .FileIcon:before {
        content: '\ec2a';
        font-family: e-icons;
        font-size: 107px;
    }
    .UploadHolder{
        min-height: 400px;
        max-height: 500px;
        overflow-y: auto;
    }
</style>

<div class=""col-lg-12 control-section"">
    <div class=""row"">
        <div class=""control_wrapper"">
            <div class=""col-md-6"">
                <label for=""EnableBugReports"" style=""padding:2%; min-width:303px;"">Enable Bug Report</label>
                <input id=""EnableBugReports"" onchange=""BugHandlerChanged()"" type=""checkbox"" />
            </div>
            <div class=""col-md-6"">
                <div class=""e-input-group e-float-icon-left"">
                    <span class=""e-input-group-icon e-input-picture"" onclick=""CopyToClipboardBugs()"" id=""copyButton""></sp");
            WriteLiteral("an>\n                    <div class=\"e-input-in-wrap\">\n                        <input class=\"e-input\" id=\"InputBugReport\" type=\"text\" placeholder=\"Enable Public Bug Reporting\"");
            BeginWriteAttribute("value", " value=\"", 1384, "\"", 1414, 1);
#nullable restore
#line 40 "/home/dwarfdevelopment/Projects/GitClones/RokonoControl/Platform/Views/Shared/Components/OutboundDetailsSettings/BugReportFormSettings/Default.cshtml"
WriteAttributeValue("", 1392, KeySettings.ApiSecret, 1392, 22, false);

#line default
#line hidden
#nullable disable
            EndWriteAttribute();
            WriteLiteral(@" disabled/>
                    </div>
                </div>
            </div>

        </div>
    </div>

    <div class=""row"">
        <div class=""col-lg-6 control-section"">
            <div class=""control_wrapper"" id=""GridHolder"">
                <div id=""TreeGrid""></div>
            </div>
        </div>
       <div class=""col-lg-6 control-section"">
            <div class=""control_wrapper"">
                <h2 id=""WorkItemTitle"" style=""text-align: center;"">I am a Heading</h2>
                <p id=""RepoSteps"" style=""text-align: justify;"">
                  Reproduction Steps: <span id=""RepoSteps""></span>
                </p>
                <div class=""row UploadHolder"" id=""FileHolder"">
                    <div class=""col-md-4"">
                        <div class=""row"">
                            ");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("img", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.SelfClosing, "9efb9c2f4070af00a56178e258fc97f22f61baf77086", async() => {
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_0);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_1);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral(@"
                        </div>
                        <p style=""text-align: center;"">FileName</p>
                        <div class=""row"" style=""text-align: center;"">
                            <button  class=""btn btn-primary e-control e-btn e-lib e-outline e-primary"">
                                Download
                            </button>
                        </div>
                    </div>

                    <div class=""col-md-4"">
                        <div class=""row"" style=""text-align: center;"">
                            <span class=""FileIcon""></span>
                        </div>
                        <p style=""text-align: center;"">FileName</p>
                        <div class=""row"" style=""text-align: center;"">
                            <button  class=""btn btn-primary e-control e-btn e-lib e-outline e-primary"">
                                Download
                            </button>
                        </div>
                    </div>
                </div>
       ");
            WriteLiteral(@"         <div class=""row"" style=""text-align: center;"">
                    <button type=""button""  onclick=""OpenModal()"" class=""btn btn-primary e-control e-btn e-lib e-outline e-primary""  id=""relationBtn"">Add new relation</button>
                </div>
                 <div class=""row"" style=""text-align: center;"">
                    <h2>Relationship Type: <span id=""RelationShipWItemType""></span></h2>
                    <p>Work Item ID: <span id=""RelationWorkItemId""></span></p>
                    <p>Work Item Name: <span id=""RelationWorkItemName""></span></p>
                 </div>
                 <div class=""row"">
                     <p style=""text-align: justify;"">
                         Description : <span id=""RelationDescription""></span>
                     </p>
                 </div>
                 <div class=""row"" style=""text-align: center;"">
                    <button type=""button""  onclick=""SaveChanges()"" class=""btn btn-primary e-control e-btn e-lib e-outline e-primary""  id=""saveChangesBtn""");
            WriteLiteral(@">Save Changes</button>
                    <button type=""button""  onclick=""CancelChanges()"" class=""btn btn-primary e-control e-btn e-lib e-outline e-primary""  id=""cancelBtn"">Remove Changes</button>
                 </div>
            </div>
        </div>
    </div>
</div>
 
<script>
    var id = ");
#nullable restore
#line 108 "/home/dwarfdevelopment/Projects/GitClones/RokonoControl/Platform/Views/Shared/Components/OutboundDetailsSettings/BugReportFormSettings/Default.cshtml"
        Write(ProjectId);

#line default
#line hidden
#nullable disable
            WriteLiteral(";\n    var wItemId = 0;\n    var EnableBugReports;\n    EnableBugReports = new ejs.buttons.Switch({ checked: ");
#nullable restore
#line 111 "/home/dwarfdevelopment/Projects/GitClones/RokonoControl/Platform/Views/Shared/Components/OutboundDetailsSettings/BugReportFormSettings/Default.cshtml"
                                                    Write(value);

#line default
#line hidden
#nullable disable
            WriteLiteral(" });\n    EnableBugReports.appendTo(\'#EnableBugReports\');\n    var BugReportChecked = 0;\n    var lastActiveId;\n    if(");
#nullable restore
#line 115 "/home/dwarfdevelopment/Projects/GitClones/RokonoControl/Platform/Views/Shared/Components/OutboundDetailsSettings/BugReportFormSettings/Default.cshtml"
  Write(value);

#line default
#line hidden
#nullable disable
            WriteLiteral(" === 1)\n        $(\"#InputBugReport\").prop( \"disabled\", false )\n    else\n        $(\"#InputBugReport\").prop( \"disabled\", true )\n\n    LoadPublicGrid();\n\n    function LoadPublicGrid()\n    {\n         var dto = {\n            \"id\": ");
#nullable restore
#line 125 "/home/dwarfdevelopment/Projects/GitClones/RokonoControl/Platform/Views/Shared/Components/OutboundDetailsSettings/BugReportFormSettings/Default.cshtml"
             Write(ProjectId);

#line default
#line hidden
#nullable disable
            WriteLiteral(@",
        }
            console.log(dto);

     

        $.ajax({
            type: 'POST',
            url: '/Backlogs/GetPublicBugReports',
            data: JSON.stringify(dto),
            contentType: ""application/json; charset=utf-8"",
            dataType: ""json"",
            success: function (response) {
                InitializePublicBugGrid(response);
            },
            error: function (xhr, status, error) {
                console.log(error);
            }
        });
    }

    function BugHandlerChanged()
    {
        if (EnableBugReports.properties.checked === true)
        {
            BugReportChecked= 1;
            $(""#InputBugReport"").prop( ""disabled"", false )
        }
        else
        {
            BugReportChecked = 0;
            $(""#InputBugReport"").prop( ""disabled"", true )

        }
          var dto = {
            ""ProjectId"":");
#nullable restore
#line 160 "/home/dwarfdevelopment/Projects/GitClones/RokonoControl/Platform/Views/Shared/Components/OutboundDetailsSettings/BugReportFormSettings/Default.cshtml"
                   Write(ProjectId);

#line default
#line hidden
#nullable disable
            WriteLiteral(@",
            ""RuleName"": ""BugReport"",
            ""Value"": BugReportChecked
        }
        $.ajax({
            type: 'POST',
            url: '/ApiKeySettings/EnableProjectFeature',
            data: JSON.stringify(dto),
            contentType: ""application/json; charset=utf-8"",
            dataType: ""json"",
            success: function (response) {
                alert(""Feature enabled, please save you api key to authorize the connection on the front end of your application."");
            },
            error: function (xhr, status, error) {
                console.log(error);
            }
        });
    }
    function InitializePublicBugGrid(data )
    {
        console.log(data);
        $(""#GridHolder"").html("""");
        $(""#GridHolder"").html(""<div id=\""TreeGrid\""></div>"");

        var treeGridObj = new ej.treegrid.TreeGrid({
            dataSource: data,
            allowSelection: true,
            allowFiltering: true,
            allowSorting: true,
            toolbar: ['Search'],
       ");
            WriteLiteral(@"     recordDoubleClick: EditWorkItemBugGrid,
            enableVirtualization: true,
            filterSettings: { type: 'Menu' },
            selectionSettings: { persistSelection: true, type: ""Multiple"" },
            enableHover: false,
            allowPaging: true,
            pageSettings: { pageSize: 20 },
            height:'750px',
            columns: [
                { type: ""checkbox"", field: """", allowFiltering: false, allowSorting: false, width: '60' },
                { field: 'workItemType.TypeName', headerText: 'Type', width: 60,customAttributes: {class: ""workItemIcon""}, textAlign: 'Right' },
                { field: 'title', headerText: 'Title', width: 125 },
                { field: 'description', headerText: 'Description', width: 180 },
                { field: 'assignedTo', headerText: 'AssignedTo', width: 110 },
            ]
        });

        treeGridObj.appendTo('#TreeGrid');
        ShowContent();


    }

    function EditWorkItemBugGrid(args)
    {
        console.log(args);
    ");
            WriteLiteral(@"    var dto = {
            ""id"": args.rowData.id
        }
        wItemId =args.rowData.id;

        $.ajax({
            type: 'POST',
            url: '/Backlogs/GetPublicBugReport',
            data: JSON.stringify(dto),
            contentType: ""application/json; charset=utf-8"",
            dataType: ""json"",
            success: function (response) {
                console.log(response);
                $(""#WorkItemTitle"").html(response.title);
                $(""#RepoSteps"").html(response.repoSteps);
                var bindingData = """";
                response.associatedWorkItemFiles.forEach(element => 
                {
                    console.log(element.file.fileType);

                    if(element.file.fileType === 1)
                    {
                        bindingData += ""<div class=\""col-md-4\"">""+
                                            ""<div class=\""row\"">""+
                                                ""<img src=\""~/Files/Uploads/""+element.file.fileLocation+"" style=\""width:");
            WriteLiteral(@" -moz-available;\"" />""+
                                            ""</div>""+
                                            ""<p style=\""text-align: center;\"">""+element.file.fileLocation+""</p>""+
                                            ""<div class=\""row\"" style=\""text-align: center;\"">""+
                                                ""<button  class=\""btn btn-primary e-control e-btn e-lib e-outline e-primary\"">""+
                                                    ""Download""+
                                                ""</button>""+
                                            ""</div>""+
                                        ""</div>"";
                    }
                    else
                    {
                        bindingData += ""<div class=\""col-md-4\"">""+
                                            ""<div class=\""row\"" style=\""text-align:center;\"">""+
                                               ""<span class=\""FileIcon\""></span>""+
                                            ""</div>""+
        ");
            WriteLiteral(@"                                    ""<p style=\""text-align: center;\"">""+element.file.fileLocation+""</p>""+
                                            ""<div class=\""row\"" style=\""text-align: center;\"">""+
                                                ""<button  class=\""btn btn-primary e-control e-btn e-lib e-outline e-primary\"">""+
                                                    ""Download""+
                                                ""</button>""+
                                            ""</div>""+
                                        ""</div>"";              
                    }
                });
                $(""#FileHolder"").html(bindingData);

            },
            error: function (xhr, status, error) {
                console.log(error);
            }
        });
    }
 
    function SaveChanges()
    {
        var dto = {
            ""id"": wItemId
        }
 
        $.ajax({
            type: 'POST',
            url: '/Backlogs/MakeWorkItemPrivate',
            data: JSON.stringify(d");
            WriteLiteral(@"to),
            contentType: ""application/json; charset=utf-8"",
            dataType: ""json"",
            success: function (response) {
                LoadPublicGrid();
            },
            error: function (xhr, status, error) {
                console.log(error);
            }
        });
    }

    function CancelChanges()
    {
        var dto = {
            ""id"": wItemId
        }
 
        $.ajax({
            type: 'POST',
            url: '/Backlogs/MakeWorkItemPublic',
            data: JSON.stringify(dto),
            contentType: ""application/json; charset=utf-8"",
            dataType: ""json"",
            success: function (response) {
                LoadPublicGrid();
            },
            error: function (xhr, status, error) {
                console.log(error);
            }
        });
    }
   function CopyToClipboardBugs()
    {
        var copyText =  document.getElementById(""InputBugReport"");
         copyText.select();
        copyText.setSelectionRange(0, 99999); /*For mobil");
            WriteLiteral("e devices*/\n\n        /* Copy the text inside the text field */\n        document.execCommand(\"copy\");\n    }\n</script>\n\n\n\n\n");
#nullable restore
#line 329 "/home/dwarfdevelopment/Projects/GitClones/RokonoControl/Platform/Views/Shared/Components/OutboundDetailsSettings/BugReportFormSettings/Default.cshtml"
Write(await Component.InvokeAsync("RelateWorkItem", new IncomingIdRequest{
    Id = 0,
    WorkItemType = @ProjectId.Value
}));

#line default
#line hidden
#nullable disable
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; }
    }
}
#pragma warning restore 1591
