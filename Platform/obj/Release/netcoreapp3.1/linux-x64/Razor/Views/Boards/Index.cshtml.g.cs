#pragma checksum "/home/dwarfdevelopment/Projects/GitClones/RokonoControl/Platform/Views/Boards/Index.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "6feaffba62720afd0ee9db9aba318e8f38dfe0cc"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Boards_Index), @"mvc.1.0.view", @"/Views/Boards/Index.cshtml")]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#nullable restore
#line 1 "/home/dwarfdevelopment/Projects/GitClones/RokonoControl/Platform/Views/_ViewImports.cshtml"
using Rokono_Control;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "/home/dwarfdevelopment/Projects/GitClones/RokonoControl/Platform/Views/_ViewImports.cshtml"
using Rokono_Control.Models;

#line default
#line hidden
#nullable disable
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"6feaffba62720afd0ee9db9aba318e8f38dfe0cc", @"/Views/Boards/Index.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"9a3d88b77ca5ff650022e07aede809867a9af767", @"/Views/_ViewImports.cshtml")]
    public class Views_Boards_Index : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    {
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_0 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("href", new global::Microsoft.AspNetCore.Html.HtmlString("~/css/Sprints/Sprints.css"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_1 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("rel", new global::Microsoft.AspNetCore.Html.HtmlString("stylesheet"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        #line hidden
        #pragma warning disable 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperExecutionContext __tagHelperExecutionContext;
        #pragma warning restore 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner __tagHelperRunner = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner();
        #pragma warning disable 0169
        private string __tagHelperStringValueBuffer;
        #pragma warning restore 0169
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __backed__tagHelperScopeManager = null;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __tagHelperScopeManager
        {
            get
            {
                if (__backed__tagHelperScopeManager == null)
                {
                    __backed__tagHelperScopeManager = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager(StartTagHelperWritingScope, EndTagHelperWritingScope);
                }
                return __backed__tagHelperScopeManager;
            }
        }
        private global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper;
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper;
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
#nullable restore
#line 1 "/home/dwarfdevelopment/Projects/GitClones/RokonoControl/Platform/Views/Boards/Index.cshtml"
  
    ViewData["Title"] = "Board";
    Layout = "~/Views/Shared/_LayoutDashboard.cshtml";
    var ProjectId = ViewData["ProjectId"];
    var WorkItemTypes = ViewData["WorkItemTypes"] as List<WorkItemTypes>;
    var ProjectName = ViewData["ProjectName"] as string;

#line default
#line hidden
#nullable disable
            WriteLiteral(@"<script src=""https://code.jquery.com/jquery-3.4.1.min.js""></script>

<script src=""https://cdn.syncfusion.com/ej2/dist/ej2.min.js"" type=""text/javascript""></script>

<link href=""https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css"" rel=""stylesheet"">

<!--[if lt IE 9]>
<script src=""../scripts/jquery-1.11.3.min.js"" type=""text/javascript"" ></script>
<![endif]-->
");
            WriteLiteral("<!--<![endif]-->\n");
            WriteLiteral("\n ");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("link", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.SelfClosing, "6feaffba62720afd0ee9db9aba318e8f38dfe0cc4821", async() => {
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_0);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_1);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral(@"

<!-- end of sidebar element -->
<!-- main-content declaration -->
<div class=""main-content"" id=""main-text"" style=""min-height: 94vh;"">
    <div class=""sidebar-content"">
      <div id=""spinner"">
            <div id=""loader""></div>
        </div>
        <div id=""Content"" hidden>
        <div class=""main-card mb-12 card"">
            <div class=""card-body text-center"">

                <div class=""page-title-heading"">
                    <div class=""page-title-icon"">
                        <i class=""pe-7s-graph text-success"">
                        </i>
                    </div>
                    <div>
                        Project Dashboard
                        <div class=""page-title-subheading"">
                            ");
#nullable restore
#line 47 "/home/dwarfdevelopment/Projects/GitClones/RokonoControl/Platform/Views/Boards/Index.cshtml"
                       Write(ProjectName);

#line default
#line hidden
#nullable disable
            WriteLiteral(@"
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class=""main-card mb-12 card"">
            <div class=""card-body text-center"">

                <div class=""row"">
                    <p>Priority</p>
                    <select class=""form-control-sm form-control"" id=""ItemPriority"">
");
#nullable restore
#line 59 "/home/dwarfdevelopment/Projects/GitClones/RokonoControl/Platform/Views/Boards/Index.cshtml"
                         foreach (var wType in WorkItemTypes)
                        {

#line default
#line hidden
#nullable disable
            WriteLiteral("                            ");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "6feaffba62720afd0ee9db9aba318e8f38dfe0cc7611", async() => {
#nullable restore
#line 61 "/home/dwarfdevelopment/Projects/GitClones/RokonoControl/Platform/Views/Boards/Index.cshtml"
                                                 Write(wType.TypeName);

#line default
#line hidden
#nullable disable
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
            BeginWriteTagHelperAttribute();
#nullable restore
#line 61 "/home/dwarfdevelopment/Projects/GitClones/RokonoControl/Platform/Views/Boards/Index.cshtml"
                               WriteLiteral(wType.Id);

#line default
#line hidden
#nullable disable
            __tagHelperStringValueBuffer = EndWriteTagHelperAttribute();
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = __tagHelperStringValueBuffer;
            __tagHelperExecutionContext.AddTagHelperAttribute("value", __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value, global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\n");
#nullable restore
#line 62 "/home/dwarfdevelopment/Projects/GitClones/RokonoControl/Platform/Views/Boards/Index.cshtml"
                        }

#line default
#line hidden
#nullable disable
            WriteLiteral(@"                    </select>
                </div>
                <div class=""row"">
                    <div class=""cols-sample-area"" id=""board"">

                        <div id=""KanbanHolder"">
                            <div id=""Kanban""></div>
                        </div>

                    </div>
                </div>
            </div>
        </div>
         <!-- Modals -->
        <div id=""AssignModel"">
            <div class=""btn-group dropdown-split-primary"" style=""text-align:center;"">
                <div class=""row"">
                    <div id=""ProjectUsers""></div>
                </div>
                <div class=""row"">
                    <button   id=""assignBtn"" onclick=""AssignNewUser()"">Assign</button>
                    <button   id=""cancelBtn"" onclick=""CancelAssign()"">Cancel</button>

                </div>
            </div>
        </div>
        </div>
    </div>
</div>
 


<script type=""text/javascript"">
        ej.base.enableRipple(true);
        var card;
        var gData;
  ");
            WriteLiteral(@"      var dialogObj;
        var selectedChanging;

        window.getTags = function (data) {
            var tagDiv = '<div class=""e-tags"">';
            var tags = data.Tags.split(',');
            for (var i = 0; i < tags.length; i++) {
                var tag = tags[i];
                tagDiv = tagDiv.concat('<div class=""e-tag e-tooltip-text"">' + tag + '</div>');
            }
            return tagDiv.concat('</div>');
        };
        $(function() {
             dialogObj = new ej.popups.Dialog({
                width: '600px',
                header: 'Chose a user',
                isModal: true,
                animationSettings: { effect: 'None' },
                visible: false,
                open: dialogOpen,
                close: dialogClose
            });
            dialogObj.appendTo('#AssignModel');

              $.ajax({
                type: 'GET',
                url: '/Accounts/GetProjectUsers?projectId=");
#nullable restore
#line 125 "/home/dwarfdevelopment/Projects/GitClones/RokonoControl/Platform/Views/Boards/Index.cshtml"
                                                     Write(ProjectId);

#line default
#line hidden
#nullable disable
            WriteLiteral(@"',
                contentType: ""application/json; charset=utf-8"",
                dataType: ""json"",
                success: function (response) {
                    InitliazePUsersGrid(response);
                },
                error: function (xhr, status, error) {
                    console.log(error);
                }
            });
            $.ajax({
                type: 'GET',
                url: '/Boards/GetWorkItems?projectId=");
#nullable restore
#line 137 "/home/dwarfdevelopment/Projects/GitClones/RokonoControl/Platform/Views/Boards/Index.cshtml"
                                                Write(ProjectId);

#line default
#line hidden
#nullable disable
            WriteLiteral(@"&workItemType='+$(""#ItemPriority :selected"").val(),
                contentType: ""application/json; charset=utf-8"",
                dataType: ""json"",
                success: function (response) {

                    GenerateKaban(response);
                },
                error: function (xhr, status, error) {
                    console.log(xhr);
                }
            });
         //   var data = ej.DataManager(window.kanbanData).executeLocal(ej.Query().take(20));
            ShowContent();

		 });
        $(""#ItemPriority"").on('change', function() {
            ShowLoader();
             $.ajax({
                type: 'GET',
                url: '/Boards/GetWorkItems?projectId=");
#nullable restore
#line 156 "/home/dwarfdevelopment/Projects/GitClones/RokonoControl/Platform/Views/Boards/Index.cshtml"
                                                Write(ProjectId);

#line default
#line hidden
#nullable disable
            WriteLiteral(@"&workItemType='+$(""#ItemPriority :selected"").val(),
                contentType: ""application/json; charset=utf-8"",
                dataType: ""json"",
                success: function (response) {

                    GenerateKaban(response);
                },
                error: function (xhr, status, error) {
                    console.log(xhr);
                }
            });
        });

         function GenerateKaban(response)
         {
             $(""#KanbanHolder"").html(""<div id=\""Kanban\""></div>"");
             $(""#KanbanHolder"").html();

            var data = ej.base.extend([], response, null, true); // To maintain the property changes, extend the object.
            console.log(data);
            var kanbanObj = new ej.kanban.Kanban({
                dataSource: data,
                dragStop: DragStopped,
                actionComplete: CardDropCheck,
                cardDoubleClick: CardSelected,
                keyField: 'status',
                enableTooltip: true,
                co");
            WriteLiteral(@"lumns: [
                    { headerText: 'To Do', keyField: 'Open', template: '#headerTemplate', allowToggle: true },
                    { headerText: 'In Progress', keyField: 'InProgress', template: '#headerTemplate', allowToggle: true },
                    { headerText: 'In Review', keyField: 'Testing', template: '#headerTemplate', allowToggle: true },
                    { headerText: 'Done', keyField: 'Done', template: '#headerTemplate', allowToggle: true }
                ],
                cardSettings: {
                    contentField: 'summary',
                    headerField: 'id',
                    template: '#cardTemplate',
                    selectionType: 'Multiple'
                },
                swimlaneSettings: {
                    keyField: 'assignee',
                }
            });


            kanbanObj.appendTo('#Kanban');
            ShowContent();
         }
        function CardSelected(args)
        {
            console.log(args);
            console.log(""/Dashboard");
            WriteLiteral("/EditWorkItem?projectId=");
#nullable restore
#line 207 "/home/dwarfdevelopment/Projects/GitClones/RokonoControl/Platform/Views/Boards/Index.cshtml"
                                                      Write(ProjectId);

#line default
#line hidden
#nullable disable
            WriteLiteral("&&workItem=\"+args.data.innerId);\n            window.location.href = \"/Dashboard/EditWorkItem?projectId=");
#nullable restore
#line 208 "/home/dwarfdevelopment/Projects/GitClones/RokonoControl/Platform/Views/Boards/Index.cshtml"
                                                                 Write(ProjectId);

#line default
#line hidden
#nullable disable
            WriteLiteral(@"&&workItem=""+args.data.innerId+""&returnUrl=""+window.location.href;

        }
        function CardDropCheck(args)
        {
            console.log(args);
            if(args.requestType == ""cardChanged"" && card)
            {
                card.Board = args.changedRecords[0].status;
                ValidateCardChanged();
            }
        }
        function ValidateCardChanged()
        {
            console.log(""Posting"");
            $.ajax({
                type: 'POST',
                url: '/Boards/ChangeWorkItemBoard',
                data: JSON.stringify(card),
                contentType: ""application/json; charset=utf-8"",
                dataType: ""json"",
                success: function(response) {
                    //window.location.href = ""/Dashboard/AssignAccountProjects?id=""+response;
                },
                error: function(xhr, status, error) {
                    console.log(error);
                }
            });
        }
         function DragStopped(args)
         {");
            WriteLiteral("\n            console.log(args);\n            card = {\n                \"CardId\" :args.data[0].innerId,\n                \"Board\" :args.data[0].status,\n                \"ProjectId\" : ");
#nullable restore
#line 243 "/home/dwarfdevelopment/Projects/GitClones/RokonoControl/Platform/Views/Boards/Index.cshtml"
                         Write(ProjectId);

#line default
#line hidden
#nullable disable
            WriteLiteral(@"
            }

         }

        function ChangeOwner(data)
        {

            selectedChanging = data;
            console.log(data);
        //    selectedChangingId = id;
            console.log(""Changing Owner"");
            dialogObj.show();
        }

        function dialogClose() {
            document.getElementById('AssignModel').style.display = 'none';
        }
        function dialogOpen() {
    
            document.getElementById('AssignModel').style.display = 'block';
        }

        function AssignNewUser()
        {
            selectedChanging.textContent = selectedRowData.name;
            ChangeCardOwner(selectedChanging.id, selectedRowData.name);
            CancelAssign();
        }
        function CancelAssign()
        {
            dialogClose();
            dialogObj.hide();

        }

        function UserSelected(args)
        {
            selectedChanging.textContent = args.rowData.name;
            CancelAssign();
            ChangeCardOwner(selectedChanging.id, arg");
            WriteLiteral(@"s.rowData.name);
        }
        function ChangeCardOwner(id,name)
        {
            var incomingSprintDTO =
            {
                ""CardId"": id,
                ""Name"": name
            }

            $.ajax({
                type: 'POST',
                url: '/Boards/ChangeCardOwner',
                data: JSON.stringify(incomingSprintDTO),
                contentType: ""application/json; charset=utf-8"",
                dataType: ""json"",
                success: function(response) {
                    
                },
                error: function(xhr, status, error) {
                    console.log(error);
                }
            });
        }

        function InitliazePUsersGrid(data)
        {
            console.log(data);
            var ProjectUsers = new ej.treegrid.TreeGrid({
                dataSource: data,
                allowSelection: true,
                allowFiltering: true,
                allowSorting: true,
                toolbar: ['Search'],
                r");
            WriteLiteral(@"owSelected: UserRowSelected,
                recordDoubleClick: UserSelected,
                filterSettings: { type: 'Menu' },
                enableHover: false,
                columns: [
                    { field: 'name', headerText: 'Email', width: 110 },
                ]
            });

            ProjectUsers.appendTo('#ProjectUsers');
        }
        function UserRowSelected(args)
        {
            selectedRowData = args.data;
            console.log(args);
        }
        function UserSelected(args)
        {
            selectedChanging.textContent = args.rowData.name;
            CancelAssign();
            ChangeCardOwner(selectedChanging.id, args.rowData.name);
        }

</script>

<script id=""headerTemplate"" type=""text/x-jsrender"">
    <div class=""header-template-wrap"">
        <div class=""header-icon e-icons ${keyField}""></div>
        <div class=""header-text"">${headerText}</div>

    </div>
</script>
<script id=""cardTemplate"" type=""text/x-jsrender"">
    <div class='card-template ");
            WriteLiteral(@"${priority}' style='content: ""\e511 "";'>
        <div class='card-header e-tooltip-text'>
            <div class=""row"" style=""display:flex;"">
                <div class=""col-2"">
                    <span class=""e-search ${priority}""></span>
                </div>
                <div class=""col-10"" style=""width:100%; text-align:center;"">
                    <span style=""text-align:center;"">${id} ${title}</span>
                </div>
            </div>
        </div>


        <div class='card-template-wrap'>
            <div class=""row"" style=""padding:2%;"">
                <div class='e-text'>${summary}</div>

            </div>
            <div class=""row"" style=""padding:2%;"">
                <div class='Interactice' onclick='ChangeOwner(this)' id='${id}'>${assgignedAccount}</div>
            </div>
            <div class=""row status"" style=""display:flex;padding:2%;"">

                <div class=""col-3"">
                    <span class='status'></span><div class='e-text' style=""text-align:left;"">Status:</di");
            WriteLiteral("v>\n                </div>\n                <div class=\"col-9\" style=\"width:100%;\">\n                    <div class=\'Interactice\'>${status}</div>\n                </div>\n            </div>\n\n        </div>\n\n    </div>\n</script>\n");
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; }
    }
}
#pragma warning restore 1591
