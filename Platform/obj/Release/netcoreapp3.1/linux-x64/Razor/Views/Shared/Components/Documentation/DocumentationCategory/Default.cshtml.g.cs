#pragma checksum "/home/dwarfdevelopment/Projects/GitClones/RokonoControl/Platform/Views/Shared/Components/Documentation/DocumentationCategory/Default.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "8aa2222b208e7373caeda962c527e4f5e53bf600"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Shared_Components_Documentation_DocumentationCategory_Default), @"mvc.1.0.view", @"/Views/Shared/Components/Documentation/DocumentationCategory/Default.cshtml")]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#nullable restore
#line 1 "/home/dwarfdevelopment/Projects/GitClones/RokonoControl/Platform/Views/_ViewImports.cshtml"
using Rokono_Control;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "/home/dwarfdevelopment/Projects/GitClones/RokonoControl/Platform/Views/_ViewImports.cshtml"
using Rokono_Control.Models;

#line default
#line hidden
#nullable disable
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"8aa2222b208e7373caeda962c527e4f5e53bf600", @"/Views/Shared/Components/Documentation/DocumentationCategory/Default.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"9a3d88b77ca5ff650022e07aede809867a9af767", @"/Views/_ViewImports.cshtml")]
    public class Views_Shared_Components_Documentation_DocumentationCategory_Default : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    {
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
#nullable restore
#line 1 "/home/dwarfdevelopment/Projects/GitClones/RokonoControl/Platform/Views/Shared/Components/Documentation/DocumentationCategory/Default.cshtml"
  
    var ProjectId = ViewData["ProjectId"] as int?;

#line default
#line hidden
#nullable disable
            WriteLiteral(@"
<style>
    #DocumentationAddNewCategory{
        max-height:175px !important; 
    }
    .InlineFlex {
        display: inline-flex;
        width: 100%;
        margin: 0;
    }
</style>

<div class=""row"">
    <button class=""btn btn-primary e-control e-btn e-lib e-outline e-primary"" style=""width: 100%;"" onclick=""OpenNewCategoryModal(1)"" id=""OpenNewCategoryModal"">Add new Category</button>
</div>
<div id=""DocumentationAddNewCategory""  >
    <div class=""row"">
            <input id=""InputNewChatCategory"" />
    </div>
    <div class=""row InlineFlex"">
        <button class=""btn btn-primary e-control e-btn e-lib e-outline e-primary"" style=""width: 50%;"" onclick=""SaveNewCategory()"">Submit</button>
        <button class=""btn btn-primary e-control e-btn e-lib e-outline e-primary"" style=""width: 50%;"" onclick=""CloseNewCategoryModal()"">Cancel</button>
    </div>

</div>

 

<script>
//end of Sidebar initialization
var DocumentationAddNewCategoryModal;
var Modal;
var CategoryId;
DocumentationAddNewCategoryModal = new ej");
            WriteLiteral(@".popups.Dialog({
    width: '600px',
    height: '175px',
    header: 'Name your new category',
    isModal: true,
    animationSettings: { effect: 'None' },
    visible: false
});
DocumentationAddNewCategoryModal.appendTo('#DocumentationAddNewCategory');

DocumentationAddNewCategoryModal.hide();
var InputNewChatCategory = new ej.inputs.TextBox({
    placeholder: 'Category Name',
    floatLabelType: 'Auto'
});
InputNewChatCategory.appendTo('#InputNewChatCategory');
function OpenNewCategoryModal(id){
    Modal = 1;
    DocumentationAddNewCategoryModal.show();
}
function CloseNewCategoryModal()
{
    DocumentationAddNewCategoryModal.hide();

}
function AddNewCategoryField(modal, internalId)
{
    Modal = modal;
    CategoryId = internalId;
    DocumentationAddNewCategoryModal.show();
}


function SaveNewCategory(id)
{
    var method;
    if(Modal === 1)
        method = ""AddNewCategory"";
    else
        method = ""AddNewCategoryField"";
    var messagesDto = {
        ""ProjectId"": ");
#nullable restore
#line 78 "/home/dwarfdevelopment/Projects/GitClones/RokonoControl/Platform/Views/Shared/Components/Documentation/DocumentationCategory/Default.cshtml"
                Write(ProjectId);

#line default
#line hidden
#nullable disable
            WriteLiteral(@",
        ""Phase"" : $(""#InputNewChatCategory"").val(),
        ""Id"" : CategoryId
    }
    console.log(messagesDto);
    console.log($(""#InputNewChatCategory"").val());
    if($(""#InputNewChatCategory"").val())
    {

        $.ajax({
                type: 'POST',
                url: '/Documentation/'+method,
                data: JSON.stringify(messagesDto),
                contentType: ""application/json; charset=utf-8"",
                dataType: ""json"",
                
                success: function (response) {
                    InitializeChatItems(response);
                    CloseNewCategoryModal();
                },
                error: function (xhr, status, error) {
                    console.log(error);
                }
        });
    }
    else
        ShowAlert(""Input field Category Name must contain a value!!!"");

}
</script>");
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; }
    }
}
#pragma warning restore 1591
