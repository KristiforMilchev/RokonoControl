
@{
    ViewData["Title"] = "Backlog";
    Layout = "~/Views/Shared/_LayoutDashboard.cshtml";
    var result = ViewData["ProjectId"] as int?;
    var BoardId = ViewData["BoardId"] as int?;
}

<link href="~/Syncfusion/ej2/material.css" rel="stylesheet" />

<!-- end of sidebar element -->
<!-- main-content declaration -->
<div class="main-content" id="main-text">
    <div class="sidebar-content">
        <div class="row" style="margin:0px;">
            <div class="col-md-12">
                <div class="main-card mb-3 card">
                    <div class="card-body">
                        <h5 class="card-title text-center">Select a project</h5>
                        <div class="row" style="margin-left:10px;">

                            <div class="btn-group dropdown-split-primary">
                                <button type="button" id="iconbtn" class="btn btn-primary">New Work Item</button>




                                <button id="QueryBtn">Open In Query</button>
                                <button id="ImportWorkItemBtn"></i>Import Work Items</button>
                                <button id="ExportWorkItemBtn">Export Work Items</button>
                                <button Id="RecycleBtn">Recycle Work Items</button>




                            </div>
                            <div class="control-section" style="height:97vh;">
                                <div class="content-wrapper">
                                    <div id="TreeGrid"></div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <script src="https://code.jquery.com/jquery-3.4.1.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/popper.js@1.16.0/dist/umd/popper.min.js" integrity="sha384-Q6E9RHvbIyZFJoft+2mJbHaEWldlvI9IOYy5n3zV9zzTtmI3UksdQRVvoxMfooAo" crossorigin="anonymous"></script>
    <script src="https://stackpath.bootstrapcdn.com/bootstrap/4.4.1/js/bootstrap.min.js" integrity="sha384-wfSDF2E50Y2D1uUdj0O3uMBJnjuUD4Ih7YwaYd1iqfktj0Uod8GCExl3Og8ifwB6" crossorigin="anonymous"></script>
    <script src="~/Syncfusion/ej2/dist/ej2.min.js"></script>

    <script>



    var ProjectId = @result;
    var  boardId = @BoardId;
    function OpenWorkItem(id)
    {
        console.log(id);
    }
    $( document ).ready(function()
    {
        var id = @result;

          var dto = {
            "id": id,
            "WorkItemType":0
        }
        console.log(dto);
        $.ajax({
            type: 'POST',
            url: '/Backlogs/GetWorkItems',
            data: JSON.stringify(dto),
            contentType: "application/json; charset=utf-8",
            dataType: "json",
            success: function (response) {
                InitiliazeGrid(response);
            },
            error: function (xhr, status, error) {
                console.log(error);
            }
        });

    });

    ej.base.enableRipple(true);
    var queryBtn = new ej.buttons.Button({ cssClass: 'e-outline', isPrimary: true });
    queryBtn.appendTo('#QueryBtn');
    var importWorkItemBtn = new ej.buttons.Button({ cssClass: 'e-outline', isPrimary: true });
    importWorkItemBtn.appendTo('#ImportWorkItemBtn');
    var exportWorkItemBtn = new ej.buttons.Button({ cssClass: 'e-outline', isPrimary: true });
    exportWorkItemBtn.appendTo('#ExportWorkItemBtn');
    var recycleBtn = new ej.buttons.Button({ cssClass: 'e-outline', isPrimary: true });
    recycleBtn.appendTo('#RecycleBtn');

    // DropDownButton items declaration
    var items = [
        {
            text: 'Feature',
            iconCss: 'e-ddb-icons e-dashboard',

            url:"/Dashboard/AddNewWorkItem?projectId="+ProjectId+"&workItemType="+2+"&boardId="+boardId+"&parentId=0"
        },
        {
            text: 'User Story',
            iconCss: 'e-ddb-icons e-notifications',
             url:"/Dashboard/AddNewWorkItem?projectId="+ProjectId+"&workItemType="+7+"&boardId="+boardId+"&parentId=0"

        },
        {
            text: 'Task',
            iconCss: 'e-ddb-icons e-settings',
            url:"/Dashboard/AddNewWorkItem?projectId="+ProjectId+"&workItemType="+3+"&boardId="+boardId+"&parentId=0"

        },
        {
            text: 'Bug',
            iconCss: 'e-ddb-icons e-logout',
            url:"/Dashboard/AddNewWorkItem?projectId="+ProjectId+"&workItemType="+1+"&boardId="+boardId+"&parentId=0"
        },
        {
            text: 'Issue',
            iconCss: 'e-ddb-icons e-logout',
            url:"/Dashboard/AddNewWorkItem?projectId="+ProjectId+"&workItemType="+6+"&boardId="+boardId+"&parentId=0"

        },
        {
            text: 'Test',
            iconCss: 'e-ddb-icons e-logout',
            url:"/Dashboard/AddNewWorkItem?projectId="+ProjectId+"&workItemType="+4+"&boardId="+boardId+"&parentId=0"
         }

        ];

    var btnObj = new ej.splitbuttons.DropDownButton({ items: items, iconCss: 'e-ddb-icons e-profile',cssClass: 'e-outline', select:WorkItemListClicked });
    btnObj.appendTo('#iconbtn');

    function WorkItemListClicked(args)
    {
        console.log(args);
        var url = args.properties.url;
        window.location.href = url;
       // console.log(args);
    }

    function InitiliazeGrid(data )
    {
        console.log(data);


        var treeGridObj = new ej.treegrid.TreeGrid({
            dataSource: data,
            allowSelection: true,
            allowFiltering: true,
            allowSorting: true,
            toolbar: ['Search'],
            recordDoubleClick: EditWorkItem,
            enableVirtualization: true,
            filterSettings: { type: 'Menu' },
            selectionSettings: { persistSelection: true, type: "Multiple" },
            enableHover: false,
            allowPaging: true,
            pageSettings: { pageSize: 20 },
            columns: [
                { type: "checkbox", field: "", allowFiltering: false, allowSorting: false, width: '60' },
                { field: 'WorkItemType.TypeName', headerText: 'Title', width: 125 },
                { field: 'title', headerText: 'Title', width: 125 },
                { field: 'description', headerText: 'Description', width: 180 },
                { field: 'assignedAccountNavigation.Email', headerText: 'AssignedTo', width: 110 },
            ]
        });

        treeGridObj.appendTo('#TreeGrid');


    }
    function CreateNewWorkItem(id){
        ProjectId = @result;
        boardId = @BoardId;
        window.location.href = "/Dashboard/AddNewWorkItem?projectId="+ProjectId+"&workItemType="+id+"&boardId="+boardId;
    }
    function WorkItemSelected(args){
        console.log(args);
    }

    function EditWorkItem(args)
    {
        console.log(args);
        window.location.href = "/Dashboard/EditWorkItem?projectId=@result&&workItem="+args.rowData.id
    }
    function load(args) {
        this.parentDetails.parentKeyFieldValue = this.parentDetails.parentRowData['id'];
    }
    </script>


