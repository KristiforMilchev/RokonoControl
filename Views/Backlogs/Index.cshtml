
@{
    ViewData["Title"] = "Backlog";
    Layout = "~/Views/Shared/_LayoutDashboard.cshtml";
    var result = ViewData["ProjectId"] as int?;
    var BoardId = ViewData["BoardId"] as int?;
}

<link href="~/Syncfusion/ej2/material.css" rel="stylesheet" />


<div class="row" style="margin:0px;">
<div class="col-md-12">
  <div class="main-card mb-3 card">
        <div class="card-body">
        <h5 class="card-title text-center">Select a project</h5>
          <div class="row" style="margin-left:10px;">

                 <div class="btn-group dropdown-split-primary">
                    <button type="button" class="btn btn-primary" onclick="CreateNewWorkItem(5)""><i class="icofont icofont-user-alt-3"></i>Add New Epic</button>
                    <button type="button" class="btn btn-primary dropdown-toggle dropdown-toggle-split waves-effect waves-light" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                        <span class="sr-only">Add Work Item</span>
                    </button>
                    <div class="dropdown-menu">                     
                        <a class="dropdown-item waves-effect waves-light" href="#" onclick="CreateNewWorkItem(2)">Feature</a>
                        <a class="dropdown-item waves-effect waves-light" href="#" onclick="CreateNewWorkItem(7)">User Story</a>
                        <a class="dropdown-item waves-effect waves-light" href="#" onclick="CreateNewWorkItem(3)">Task</a>
                        <a class="dropdown-item waves-effect waves-light" href="#" onclick="CreateNewWorkItem(1)">Bug</a>
                        <a class="dropdown-item waves-effect waves-light" href="#" onclick="CreateNewWorkItem(6)">Issue</a>
                        <a class="dropdown-item waves-effect waves-light" href="#" onclick="CreateNewWorkItem(4)">Test</a>
                    </div>
                </div>

                <button class="btn btn-primary btn-outline-primary"><i class="icofont icofont-user-alt-3"></i>Open In Query</button>
                <button class="btn btn-primary btn-outline-primary"><i class="icofont icofont-user-alt-3"></i>Import Work Items</button>
                <button class="btn btn-primary btn-outline-primary"><i class="icofont icofont-user-alt-3"></i>Export Work Items</button>
                <button class="btn btn-primary btn-outline-primary"><i class="icofont icofont-user-alt-3"></i>Recycle Work Items</button>



                
            </div>
           <div class="control-section">
                <div class="content-wrapper">
                    <div id="TreeGrid"></div>
                </div>
            </div>
        </div>
    </div>
</div>
</div>
<script
  src="https://code.jquery.com/jquery-3.4.1.js"
  integrity="sha256-WpOohJOqMqqyKL9FccASB9O0KwACQJpFTUBLTYOVvVU="
  crossorigin="anonymous"></script>
 <script src="~/Syncfusion/ej2/dist/ej2.min.js"></script>

 <script>
     var ProjectId = @result;
    function OpenWorkItem(id)
    {
        console.log(id);
    }
    $( document ).ready(function() 
    {
        var id = @result;
        
          var dto = {
            "id": id,
            
        }
        console.log(dto);
        $.ajax({
            type: 'POST',
            url: '/Backlogs/GetWorkItems',
            data: JSON.stringify(dto),
            contentType: "application/json; charset=utf-8",
            dataType: "json",
            success: function (response) {
                InitiliazeGrid(response);
            },
            error: function (xhr, status, error) {
                console.log(error);
            }
        });
        
    });
    function InitiliazeGrid(data )
    {
        console.log(data);


        var treeGridObj = new ej.treegrid.TreeGrid({
            dataSource: data,
            allowSelection: true,
            allowFiltering: true,
            allowSorting: true,
            toolbar: ['Search'],

            enableVirtualization: true,
            filterSettings: { type: 'Menu' },
            selectionSettings: { persistSelection: true, type: "Multiple", checkboxOnly: true },
            enableHover: false,
            allowPaging: true,
            pageSettings: { pageSize: 20 },
            columns: [
                { type: "checkbox", field: "", allowFiltering: false, allowSorting: false, width: '60' },
                { field: 'WorkItemType.TypeName', headerText: 'Title', width: 125 },
                { field: 'title', headerText: 'Title', width: 125 },
                { field: 'description', headerText: 'Description', width: 180 },
                { field: 'assignedAccountNavigation.Email', headerText: 'AssignedTo', width: 110 },
            ]
        });

        treeGridObj.appendTo('#TreeGrid');


    }
    function CreateNewWorkItem(id){
        ProjectId = @result;
        boardId = @BoardId;
        window.location.href = "/Dashboard/AddNewWorkItem?projectId="+ProjectId+"&workItemType="+id+"&boardId="+boardId;
    }
    function WorkItemSelected(args){
        console.log(args);
    }
    function load(args) {
        this.parentDetails.parentKeyFieldValue = this.parentDetails.parentRowData['id'];
    }
 </script>


