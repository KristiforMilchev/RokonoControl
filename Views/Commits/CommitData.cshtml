@{
    ViewData["Title"] = "Commits";
    Layout = "~/Views/Shared/_LayoutDashboard.cshtml";
    var commitKey = ViewData["CommitKey"];
    var BranchId = ViewData["BranchId"];
    var ProjectId = ViewData["PrijectId"];
}
<link href="~/Syncfusion/ej2/material.css" rel="stylesheet" />
   <!-- end of sidebar element -->
        <!-- main-content declaration -->
<<<<<<< HEAD:Platform/Views/Commit/CommitData.cshtml
   
=======
        <div class="main-content" id="main-text" style="height: 94vh;">
            <div class="sidebar-content">

>>>>>>> changing the UI interface to use only controls due to copyright issues with the last template as it can't be redustributed under MIT, adding base logic for linking work items. Removing a bug causing work items to be duplicated. Upgrading the kahaban board to v2 syncfusion:Views/Commit/CommitData.cshtml
<div class="row">
    <div class="col-md-3">
        <div class="main-card mb-3 card">
            <div class="control-section">
                <div class="content-wrapper">
                    <div id="tree"style="height:80vh; width:300px" ></div>
                </div>
            </div>
        </div>
    </div>
    <div class="col-md-9">
        <div id="container" style="width:89vh;height:100%;border:1px solid grey"></div>
    </div>
</div>
<<<<<<< HEAD:Platform/Views/Commit/CommitData.cshtml
 
=======
  </div>
        </div>
>>>>>>> changing the UI interface to use only controls due to copyright issues with the last template as it can't be redustributed under MIT, adding base logic for linking work items. Removing a bug causing work items to be duplicated. Upgrading the kahaban board to v2 syncfusion:Views/Commit/CommitData.cshtml
 <script src="https://code.jquery.com/jquery-3.4.1.slim.min.js" integrity="sha384-J6qa4849blE2+poT4WnyKhv5vZF5SrPo0iEjwBvKU7imGFAV0wwj1yYfoRSJoZ+n" crossorigin="anonymous"></script>
<script src="https://cdn.jsdelivr.net/npm/popper.js@1.16.0/dist/umd/popper.min.js" integrity="sha384-Q6E9RHvbIyZFJoft+2mJbHaEWldlvI9IOYy5n3zV9zzTtmI3UksdQRVvoxMfooAo" crossorigin="anonymous"></script>
<script src="https://stackpath.bootstrapcdn.com/bootstrap/4.4.1/js/bootstrap.min.js" integrity="sha384-wfSDF2E50Y2D1uUdj0O3uMBJnjuUD4Ih7YwaYd1iqfktj0Uod8GCExl3Og8ifwB6" crossorigin="anonymous"></script>
 <script src="~/Syncfusion/ej2/dist/ej2.min.js"></script>

 
<script>
var editor;
require.config({ paths: { 'vs': '/Syncfusion/node_modules/monaco-editor/min/vs' }});
	require(['vs/editor/editor.main'], function() {
	    editor = monaco.editor.create(document.getElementById('container'), {
			value: [
				 "Console.WriteLine(\"Works\")"
			].join('\n'),
			language: 'csharp'
		});
	});

    
    var BindingData ;
    $( document ).ready(function() 
    {
        $.ajax({
            type: 'GET',
            url: '/Commit/GetCommitFiles?commitId=@commitKey&&projectId=@ProjectId',
            contentType: "application/json; charset=utf-8",
            dataType: "json",
            success: function (response) {
                console.log(response);
                LoadCommitHirarchy(response);
            },
            error: function (xhr, status, error) {
    
            }
        });
     
    });

    function LoadCommitHirarchy(data)
    {
        BindingData = data;
        var treeObj = new ej.navigations.TreeView({
            fields: { dataSource: data, id: 'id', text: 'name', child: 'subChild', value: 1 },
            nodeSelected: ItemSelected
        });
        treeObj.appendTo('#tree');
            
    }
    
    function ItemSelected(args)
    {
        console.log(args.nodeData.id);
        BindingData.forEach(function(cData) {
            console.log(cData );
            if(cData.id === args.nodeData.id)
                ShowSelectedFile(cData);
            else
            {
                if(cData.subChild !== null)
                {
                    cData.subChild.forEach(function(bData){
                        console.log(bData);
                        if(bData.id === args.nodeData.id)
                            ShowSelectedFile(bData);
                    });
                }
            }
        });
    }

    function ShowSelectedFile(file)
    {
        $("#container").html("");
           $.ajax({
            type: 'GET',
            url: '/Commit/GetCommitFileData?fileId='+file.itemId+"&branch=@BranchId",
            contentType: "application/json; charset=utf-8",
            dataType: "json",
            success: function (response) {
                console.log(response);
                editor = monaco.editor.create(document.getElementById('container'), {
                    value:  response.data,
                    language:  response.languageType
                });
             
            },
            error: function (xhr, status, error) {
                console.log(xhr);
            }
        });
    }
        
    
</script>