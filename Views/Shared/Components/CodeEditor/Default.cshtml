@{ 
    var data = ViewData["CommitDetails"] as (string, string)?;
    var master = @data.Value.Item1.Replace(" &#xD;&#xA;", Environment.NewLine);
    var slave = @data.Value.Item2.Replace(" &#xD;&#xA;", Environment.NewLine);
}

<div style="height:80vh">

    <div id="EditorContainer" style="height:100%;"></div>

</div>

<link rel="stylesheet"
      data-name="vs/editor/editor.main"
      href="../node_modules/monaco-editor/dev/vs/editor/editor.main.css" />
<script src="../node_modules/monaco-editor/dev/vs/loader.js"></script>
<script src="../node_modules/monaco-editor/dev/vs/editor/editor.main.nls.js"></script>
<script src="../node_modules/monaco-editor/dev/vs/editor/editor.main.js"></script>

<script>
    debugger


    // The diff editor offers a navigator to jump between changes. Once the diff is computed the <em>next()</em> and <em>previous()</em> method allow navigation. By default setting the selection in the editor manually resets the navigation state.
    var originalModel = monaco.editor.createModel("@master.ToString()", "csharp");
    var modifiedModel = monaco.editor.createModel("@slave.ToString()", "csharp");


    var diffEditor = monaco.editor.createDiffEditor(document.getElementById("EditorContainer"));
    diffEditor.setModel({
        original: originalModel,
        modified: modifiedModel,
        lineNumbers: "off",
        roundedSelection: true,
        scrollBeyondLastLine: false,
        readOnly: false,
        theme: "vs-light"

    });

    var navi = monaco.editor.createDiffNavigator(diffEditor, {
        followsCaret: true, // resets the navigator state when the user selects something in the editor
        ignoreCharChanges: true // jump from line to line
    });

    window.setInterval(function () {
        navi.next();
    }, 2000);


</script>